<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>TODO</title>
    <url>/2024/09/11/TODO/</url>
    <content><![CDATA[
<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="22317d1301c89bc7b8eb03a40f5b511234d19ed01e4dfc6f0ac4233772277216">5844f566621fccb9c583f0174433e530ae0211002cae057bf8faafacaa6c719d17dc8b38965d2cdd04c62349e206af5b0d61a2461a0d26d288e8f8ae881d98f0161883d2f86f53c6255db59ee4145f82230da3418bc6653b8453ad37a85a3afe4475a98c5298713ec00aa0cd3251ee01e32c12070f7efc82dfcc71a1a7f1b10858823787ff49b907a4e91317f878da0b3f2d692fe6de15e6f982712dd47443b5e70822485258018f4b7fc627f2838acae4d6445b6ca6195874a1a404efe42fe36d6054ce9a5a60482cf271281c9d474e39d7d64a039cb9ada402d3db167bd2f9b2b9c8decc986930f774f22b279ccebfa2ba3acf668f305fd5588b1accec3a2ef165d7f9fcb128470e235342798ad91de5537d7a40ec41d7672a8d73ee9ae6a736a9174a19f068dc6932c414276735bed72bdddb5d1afc16d1603ce01e7e73e3ae60ac28ea253e726808e7a47fb5b8c8a4c80386c01f0c06715693e1121702896585f2bf3d9266d5f15ba581321ea3e11439bdbccdd5b4d5d0ced2ceac0ee07d4bb9993da6a52880fa92b8ed26ae80538c45fdd70bf81e4df3c54404d0ccc90f99f1b481c5f131d3f5e3a9fe1e69ce57b2b70634ed2dd7d01fe0ccbcce4a3ca886a532167ff8586bdb36b0ffb5f68e5456507fb46cda4449a21bddbd97ebecde92a15317bda01e7d02e45cf27dff3d8a158fd73d75ee30d72af113e239b642538dea8c1284d6cdab35fe10c54c671741be85c1797650daf8bd818a65c0c81bda8d28c2a3645758acf30100f26311fcadbec192586b1d004ccfa4c67b21f80bdb4367211956685508d8e6ed52229535e708681dc2b74d0124a55c8be778c5d6afa4fb5d2490bec3d04ed3ca16c2cd8b072e6b0cc2989d439e3febd3c0b6227279e36b0868c7e18c09c5b24bfc62f159f5c17e7c92429f84c2564bd48122fc323b0398f21e5e518034cdb541c09f904d3222110e9254703fb430f7bab5374393d68e97f653980a1ffbe5175b47ddd593ff</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<link href="/css/hbe.style.css" rel="stylesheet" type="text/css"><script data-swup-reload-script type="module" src="/js/plugins/hbe.js"></script>
<script data-swup-reload-script type="module">
import {initHBE} from "/js/plugins/hbe.js";
  console.log("hexo-blog-encrypt: loaded.");
    initHBE();
</script>
]]></content>
      <categories>
        <category>TODO</category>
      </categories>
      <tags>
        <tag>TODO</tag>
      </tags>
  </entry>
  <entry>
    <title>Chapter-2</title>
    <url>/2024/09/11/English/Chapter-2/</url>
    <content><![CDATA[<h2 align="center">articles-1</h2>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/icon-5.gif"
                      width="20" height="20"
                >

<p>When most people read, they look at printed <code>words</code> on a <code>page</code>. They use their eyes to see the words in <code>front</code> of them. But how does someone read if he is <code>blind</code>?</p>
<p>当大多数人阅读时，他们会查看页面上的印刷文字。他们用眼睛看眼前的文字。但是如果一个人是盲人，他如何阅读呢？</p>
<p>Blind people can read too, of <code>course</code>, but they don’t read with their eyes. They use a <code>system</code> called Braille to read.</p>
<p>盲人当然也能读书，但他们不是用眼睛读书。他们使用一种称为盲文的系统来阅读。</p>
<p>This system was <code>invented</code> by a man named Louis Braille. Louis Braille lost his <code>sight</code> when he was a little boy. He then created a system to allow blind people like him to read.</p>
<p>这个系统是由一个名叫路易斯盲文的人发明的。路易斯·布莱叶（Louis Braille）小时候双目失明。然后他创建了一个系统，让像他这样的盲人能够阅读。</p>
<p>With Braille, you don’t read by looking at printed words. <code>Instead</code>, you read by <code>touching</code> <code>raised</code> dots. These dots can be felt and understood through the fingertips.</p>
<p>使用盲文时，您无需通过查看印刷文字来阅读。相反，您可以通过触摸凸起的点来阅读。这些点可以通过指尖感受到和理解。</p>
<p>Different <code>dot</code> <code>shapes</code> stand for different letters. As your <code>finger</code> slides over all of the dots, you can put the letters <code>together</code> to form words in your mind. In that way, it is <code>actually</code> very <code>similar</code> to reading with your eyes!</p>
<p>不同的点形状代表不同的字母。当你的手指滑过所有的点时，你可以将这些字母组合在一起，在你的脑海中形成单词。这样一来，其实就和用眼睛看书很像了！</p>
<h2 align="center">articles-2</h2>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/icon_1.gif"
                      width="20" height="20"
                >

<p>Police <code>officer</code> Rachel Blair works in Queens, New York. A <code>reporter</code> is asking Rachel about how she does her job.</p>
<p>警官雷切尔·布莱尔在纽约皇后区工作。一名记者询问雷切尔的工作情况。</p>
<p>Reporter: How long have you been a police officer?</p>
<p>记者：您当警察多久了？</p>
<p>Blair: Six years.</p>
<p>布莱尔：六年。</p>
<p>Reporter: How did you get started?</p>
<p>记者：你是怎么开始的？</p>
<p>Blair: First, I had to take a lot of tests. Then, I went to the Police <code>Academy</code> for 12 weeks. I learned how to drive a police car, make an <code>arrest</code>, and file a police report. I also had to <code>exercise</code> every day!</p>
<p>布莱尔：首先，我必须参加很多测试。然后，我去警察学院学习了 12 周。我学会了如何驾驶警车、如何逮捕、如何向警方报案。我还得每天锻炼身体呢！</p>
<p>Reporter: How do you stay safe on the job?</p>
<p>记者：工作中如何保证安全？</p>
<p>Blair: I use my <code>training</code>. That helps me make <code>sure</code> a <code>situation</code> does not get out of <code>control</code>. I am always <code>cautious</code>. If I think a situation is too <code>dangerous</code>, I call for <code>backup</code>. If I run into a dangerous situation without thinking first, I can get hurt.</p>
<p>布莱尔：我用我的训练。这有助于我确保情况不会失控。我总是很谨慎。如果我认为情况太危险，我会呼叫支援。如果我不经思考就遇到了危险的情况，我可能会受伤。</p>
<p>Reporter: Are there any new tools that police officers use?</p>
<p>记者：警察有什么新的工具使用吗？</p>
<p>Blair: We use <code>special</code> glasses that help us see better in the dark. When I wear the <code>glasses</code>, I can see moving <code>objects</code> like cars and other people at night.</p>
<p>布莱尔：我们使用特殊的眼镜来帮助我们在黑暗中看得更清楚。当我戴上眼镜时，我可以在晚上看到汽车和其他人等移动物体。</p>
<p>Reporter: Have you ever saved someone’s life?</p>
<p>记者：你救过人吗？</p>
<p>Blair: No, I haven’t. But my partner has. He says it gave him a <code>pretty</code> special feeling.</p>
<p>布莱尔：不，我没有。但我的伙伴有。他说这给了他一种很特别的感觉。</p>
<p>Reporter: Do you ever get <code>afraid</code>?</p>
<p>记者：你有害怕过吗？</p>
<p>Blair: There is no time to be afraid. I have to think about what I have to do to take care of the situation <code>quickly</code> and safely.</p>
<p>布莱尔：没有时间害怕。我必须考虑我必须做什么才能快速、安全地处理这种情况。</p>
<p>Reporter: What do you like best about being a police officer?</p>
<p>记者：作为一名警察，你最喜欢什么？</p>
<p>Blair: Helping people!</p>
<p>布莱尔：帮助人们！</p>
<h2 align="center">articles-3</h2>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/icon-3.gif"
                      width="20" height="20"
                >

<h2 align="center">articles-4</h2>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/icon-4.gif"
                      width="20" height="20"
                >

<h2 align="center">articles-5</h2>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/icon-6.gif"
                      width="20" height="20"
                >
]]></content>
      <categories>
        <category>English</category>
      </categories>
      <tags>
        <tag>English-Article</tag>
      </tags>
  </entry>
  <entry>
    <title>常用命令快速备忘清单</title>
    <url>/2024/09/11/Essay/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<div class="tabs" id="tab-linux-commands"><ul class="nav-tabs"><li class="tab active"><a class="#linux-commands-1">linux 常用命令</a></li><li class="tab"><a class="#linux-commands-2">linux apt 常用命令</a></li><li class="tab"><a class="#linux-commands-3">linux yum 常用命令</a></li></ul><div class="tab-content"><div class="tab-pane active" id="linux-commands-1"><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">ls            列出当前目录文件列表</span><br><span class="line">mkdir         创建目录（md）</span><br><span class="line">cd            切换路径</span><br><span class="line">pwd            显示当前路径</span><br><span class="line">rm -rf        删除文件</span><br><span class="line">cat            查看文件内容</span><br><span class="line">touch          创建文件</span><br><span class="line">vi             编辑文件</span><br><span class="line">clear          清屏</span><br><span class="line">history        查看历史指令</span><br><span class="line">history -c      清楚历史指令</span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="linux-commands-2"><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">apt update        检查更新</span><br><span class="line">apt upgrade       开始更新</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="built_in">sudo</span> apt update &amp;&amp; <span class="built_in">sudo</span> apt upgrade -y 检查并更新</span></span><br><span class="line">apt install xxx    安装包</span><br><span class="line">apt remove xxx    卸载包</span><br><span class="line">apt search xxx    搜索包</span><br><span class="line">apt list           查看已安装包</span><br><span class="line">apt show xxx       查看包信息</span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="linux-commands-3"><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum update        检查更新</span><br><span class="line">yum upgrade       开始更新</span><br><span class="line">yum install xxx    安装包</span><br><span class="line">yum remove xxx    卸载包</span><br><span class="line">yum search xxx    搜索包</span><br><span class="line">yum list           查看已安装包</span><br><span class="line">yum info xxx       查看包信息</span><br><span class="line">yum clean all     清理缓存</span><br></pre></td></tr></table></figure></div></div></div></div>


<div class="tabs" id="tab-commands"><ul class="nav-tabs"><li class="tab active"><a class="#commands-1">CMD 常用命令</a></li><li class="tab"><a class="#commands-2">ssh 常用命令</a></li></ul><div class="tab-content"><div class="tab-pane active" id="commands-1"><div class="highlight-container" data-rel="Cmd"><figure class="iseeu highlight cmd"><table><tr><td class="code"><pre><span class="line">history                查看历史指令</span><br><span class="line">history -c             清楚历史指令</span><br><span class="line"><span class="built_in">cls</span>                    清屏</span><br><span class="line"><span class="built_in">cd</span> &gt; Dockerfile.txt    创建文件</span><br><span class="line"><span class="built_in">cd</span>                     显示当前目录</span><br><span class="line"><span class="built_in">cd</span> 路径                切换路径</span><br><span class="line"><span class="built_in">dir</span>                    列出当前目录文件列表</span><br><span class="line"><span class="built_in">tree</span>                   树形列出当前目录结构</span><br><span class="line"><span class="built_in">mkdir</span>                  创建目录（<span class="built_in">md</span>）</span><br><span class="line"><span class="built_in">ipconfig</span>               查看本机ip</span><br><span class="line"><span class="built_in">copy</span> 路径 路径         文件拷贝</span><br><span class="line"><span class="built_in">ping</span> ip                测试网路</span><br><span class="line"><span class="built_in">help</span>                   查看使用帮助</span><br><span class="line"><span class="built_in">net</span> <span class="built_in">start</span>              查看开启了哪些服务</span><br><span class="line"><span class="built_in">echo</span> 信息 &gt;&gt; pass.txt  将&quot;信息&quot;保存到pass.txt文件中</span><br><span class="line"><span class="built_in">find</span> 文件名            查找某文件</span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="commands-2"><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ssh root@192.168.1.5          <span class="comment"># 连接到服务器（默认端口 22）</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ssh root@192.168.1.5 -p 6222  <span class="comment">#在特定端口上连接</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ssh -i /path/file.pem root@192.168.1.5    <span class="comment">#通过 pem 文件连接（0400 权限）</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ssh root@192.168.1.5 bash &lt; script.sh     <span class="comment">#调用本地脚本</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ssh root@192.168.1.5 <span class="string">&quot;tar cvzf - ~/source&quot;</span> &gt; output.tgz   <span class="comment">#从服务器压缩和下载</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">scp user@server:/dir/file.ext dest/   <span class="comment">#从远程复制到本地</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">scp dest/file.ext user@server:/dir    <span class="comment">#从本地复制到远程</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ssh-keygen    <span class="comment">#以交互方式生成密钥</span></span></span><br></pre></td></tr></table></figure></div></div></div></div>]]></content>
      <categories>
        <category>Essay</category>
      </categories>
      <tags>
        <tag>Essay</tag>
        <tag>Common commands</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown 语法</title>
    <url>/2024/09/11/Essay/Markdown%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h3 id="Markdown-基本语法"><a href="#Markdown-基本语法" class="headerlink" title="Markdown 基本语法"></a>Markdown 基本语法</h3><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line"># H1 标题</span><br><span class="line"></span><br><span class="line">## H2 标题</span><br><span class="line"></span><br><span class="line">### H3 标题</span><br><span class="line"></span><br><span class="line">- 列表项 1</span><br><span class="line">  - 子列表项 1.1</span><br><span class="line">  - 子列表项 1.2</span><br><span class="line">- 列表项 2</span><br><span class="line">  - 子列表项 2.1</span><br><span class="line">  - 子列表项 2.2</span><br><span class="line"></span><br><span class="line">1. 有序列表项 1</span><br><span class="line">2. 有序列表项 2</span><br><span class="line">3. 有序列表项 3</span><br><span class="line"></span><br><span class="line">- [ ] 待办事项 1</span><br><span class="line">- [x] 已完成事项 1</span><br><span class="line">- [ ] 待办事项 2</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>


<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">| 标题 1   | 标题 2   | 标题 3   |</span><br><span class="line">| -------- | -------- | -------- |</span><br><span class="line">| 单元格 1 | 单元格 2 | 单元格 3 |</span><br><span class="line">| 单元格 A | 单元格 B | 单元格 C |</span><br><span class="line"></span><br><span class="line">&gt; 这是一段引用文本。</span><br><span class="line"></span><br><span class="line">这是一个脚注的引用[^1]。</span><br><span class="line"></span><br><span class="line">[^1]: 这是脚注的内容。</span><br></pre></td></tr></table></figure></div>

<h3 id="Redefine-の-Markdown语法"><a href="#Redefine-の-Markdown语法" class="headerlink" title="Redefine の Markdown语法"></a>Redefine の Markdown语法</h3><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% notel default 信息 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endnotel %&#125;</span><br><span class="line">---------------------------</span><br><span class="line">&#123;% notel blue 提示 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endnotel %&#125;</span><br><span class="line">---------------------------</span><br><span class="line">blue green yellow orange red</span><br><span class="line">---------------------------</span><br><span class="line">---------------------------</span><br><span class="line">&#123;% note  %&#125;</span><br><span class="line">默认 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">---------------------------</span><br><span class="line">&#123;% note primary  %&#125;</span><br><span class="line">primary 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">---------------------------</span><br><span class="line">&#123;% note red fa-bolt%&#125;</span><br><span class="line">自定义提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">---------------------------</span><br><span class="line">primary success info warning danger</span><br><span class="line">---------------------------</span><br><span class="line">---------------------------</span><br><span class="line">&#123;% folding yellow::标题 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line">---------------------------</span><br><span class="line">&#123;% tabs First-unique-name %&#125;</span><br><span class="line">&lt;!-- tab First Tab--&gt;</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&lt;!-- tab Second Tab--&gt;</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&lt;!-- tab Third Tab--&gt;</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br><span class="line">---------------------------</span><br><span class="line">&#123;% btn regular::GitHub::https://www.github.com::fa-solid fa-play-circle %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% btn center large::GitHub::https://www.github.com::fa-solid fa-book %&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      <categories>
        <category>Essay</category>
      </categories>
      <tags>
        <tag>Essay</tag>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>常用快捷键</title>
    <url>/2024/09/11/Essay/%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
    <content><![CDATA[<div class="tabs" id="tab-shortcut-key"><ul class="nav-tabs"><li class="tab active"><a class="#shortcut-key-1">windows 常用快捷键</a></li><li class="tab"><a class="#shortcut-key-2">vscode 常用快捷键</a></li></ul><div class="tab-content"><div class="tab-pane active" id="shortcut-key-1"><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">win+Tab     打开任务视图</span><br><span class="line">win+D       显示隐藏桌面</span><br><span class="line">Alt+Tab     应用间切换</span><br><span class="line">win+x       快速链接</span><br><span class="line">win+l       锁定屏幕</span><br><span class="line">Alt         选择窗口控件</span><br><span class="line">Alt+F4      关闭窗口</span><br><span class="line">win+ctrl+d  创建虚拟桌面</span><br><span class="line">win+方向键   改变应用窗口大小</span><br><span class="line">win+i        设置</span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="shortcut-key-2"><table>
<thead>
<tr>
<th align="left">快捷键</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left">F1</td>
<td align="left">展示全局命令面板</td>
</tr>
<tr>
<td align="left">Ctrl+P</td>
<td align="left">快速打开最近打开的文件</td>
</tr>
<tr>
<td align="left">Ctrl+Shift+N</td>
<td align="left">打开新的编辑器窗口</td>
</tr>
<tr>
<td align="left">Ctrl+Shift+W</td>
<td align="left">关闭编辑器</td>
</tr>
<tr>
<td align="left">Ctrl + Shift + [</td>
<td align="left">折叠区域代码</td>
</tr>
<tr>
<td align="left">Ctrl + Shift + ]</td>
<td align="left">展开区域代码</td>
</tr>
<tr>
<td align="left">Ctrl + &#x2F;</td>
<td align="left">添加关闭行注释</td>
</tr>
<tr>
<td align="left">Shift + Alt +A</td>
<td align="left">块区域注释</td>
</tr>
<tr>
<td align="left">Ctrl + G</td>
<td align="left">跳转行</td>
</tr>
<tr>
<td align="left">Ctrl + P</td>
<td align="left">跳转文件</td>
</tr>
<tr>
<td align="left">Ctrl + F</td>
<td align="left">查询</td>
</tr>
<tr>
<td align="left">Ctrl + H</td>
<td align="left">替换</td>
</tr>
<tr>
<td align="left">Ctrl + Space</td>
<td align="left">输入建议[智能提示]</td>
</tr>
<tr>
<td align="left">Ctrl + Shift + Space</td>
<td align="left">参数提示</td>
</tr>
<tr>
<td align="left">Shift + Alt + F</td>
<td align="left">格式化代码</td>
</tr>
<tr>
<td align="left">F12</td>
<td align="left">跳转到定义处</td>
</tr>
<tr>
<td align="left">Alt + F12</td>
<td align="left">代码片段显示定义</td>
</tr>
<tr>
<td align="left">Ctrl + K F12</td>
<td align="left">在其他窗口打开定义处</td>
</tr>
<tr>
<td align="left">Ctrl + .</td>
<td align="left">快速修复部分可以修复的语法错误</td>
</tr>
<tr>
<td align="left">Shift + F12</td>
<td align="left">显示所有引用</td>
</tr>
<tr>
<td align="left">F2</td>
<td align="left">重命名符号</td>
</tr>
<tr>
<td align="left">Ctrl + F4, Ctrl + W</td>
<td align="left">关闭编辑器</td>
</tr>
<tr>
<td align="left">Ctrl + k F</td>
<td align="left">关闭当前打开的文件夹</td>
</tr>
<tr>
<td align="left">Ctrl + F4</td>
<td align="left">关闭当前编辑窗口</td>
</tr>
<tr>
<td align="left">Ctrl + K Ctrl + W</td>
<td align="left">关闭所有编辑窗口</td>
</tr>
<tr>
<td align="left">Ctrl + Shift + F</td>
<td align="left">打开全局搜索</td>
</tr>
<tr>
<td align="left">Ctrl + Shift + G</td>
<td align="left">打开 Git 可视管理</td>
</tr>
<tr>
<td align="left">Ctrl + Shift + D</td>
<td align="left">打开 DeBug 面板</td>
</tr>
<tr>
<td align="left">Ctrl + Shift + X</td>
<td align="left">打开插件市场面板</td>
</tr>
<tr>
<td align="left">Ctrl + Shift + H</td>
<td align="left">在当前文件替换查询替换</td>
</tr>
<tr>
<td align="left">Ctrl + Shift + J</td>
<td align="left">开启详细查询</td>
</tr>
<tr>
<td align="left">Ctrl + K v</td>
<td align="left">在边栏打开渲染后的视图【新建】</td>
</tr>
<tr>
<td align="left">F11</td>
<td align="left">切换全屏模式</td>
</tr>
<tr>
<td align="left">F9</td>
<td align="left">添加解除断点</td>
</tr>
<tr>
<td align="left">F5</td>
<td align="left">启动调试、继续</td>
</tr>
<tr>
<td align="left">F11 &#x2F; Shift + F11</td>
<td align="left">单步进入 &#x2F; 单步跳出</td>
</tr>
<tr>
<td align="left">F10</td>
<td align="left">单步跳过</td>
</tr>
</tbody></table></div></div></div>


]]></content>
      <categories>
        <category>Essay</category>
      </categories>
      <tags>
        <tag>Essay</tag>
        <tag>shortcut key</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker の GUI</title>
    <url>/2024/09/11/Development%20Tools/Docker%E5%85%A5%E9%97%A8/Docker&amp;Gui/</url>
    <content><![CDATA[
<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="f25d22b3d35f0ba1897e6468a2a266ec3588056be86cdf41248ce8f94c6146ce"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<link href="/css/hbe.style.css" rel="stylesheet" type="text/css"><script data-swup-reload-script type="module" src="/js/plugins/hbe.js"></script>
<script data-swup-reload-script type="module">
import {initHBE} from "/js/plugins/hbe.js";
  console.log("hexo-blog-encrypt: loaded.");
    initHBE();
</script>
]]></content>
      <categories>
        <category>Development Tools</category>
      </categories>
      <tags>
        <tag>Deve-Tool</tag>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Dockerfile &amp; dockercompose</title>
    <url>/2024/09/11/Development%20Tools/Docker%E5%85%A5%E9%97%A8/Docker/</url>
    <content><![CDATA[
<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="381d8800a319009c3989dc09b126fff0d587cbe2c13d4d1249cbc3421d071782"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<link href="/css/hbe.style.css" rel="stylesheet" type="text/css"><script data-swup-reload-script type="module" src="/js/plugins/hbe.js"></script>
<script data-swup-reload-script type="module">
import {initHBE} from "/js/plugins/hbe.js";
  console.log("hexo-blog-encrypt: loaded.");
    initHBE();
</script>
]]></content>
      <categories>
        <category>Development Tools</category>
      </categories>
      <tags>
        <tag>Deve-Tool</tag>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Chapter-1</title>
    <url>/2024/09/11/English/Chapter-1/</url>
    <content><![CDATA[<h2 align="center">articles-1</h2>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/icon-5.gif"
                      width="20" height="20"
                >

<p>Carly has a <code>large</code> <code>family</code>. She lives with four people. Carly also has two pets.</p>
<p>卡莉有一个大家庭。她和四个人住在一起。卡莉还有两只宠物。</p>
<p>Carly’s mom is a <code>doctor</code>. Carly’s mom works at the <code>hospital</code>. Carly’s mom helps people who are sick.</p>
<p>卡莉的妈妈是一名医生。卡莉的妈妈在医院工作。卡莉的妈妈帮助生病的人。</p>
<p>Carly’s dad works at home. Carly’s dad <code>cooks</code> for the family. Carly’s dad <code>drives</code> the kids to <code>soccer</code> <code>practice</code>.</p>
<p>卡莉的爸爸在家工作。卡莉的爸爸为家人做饭。卡莉的爸爸开车送孩子们去练习足球。</p>
<p>Carly has two <code>brothers</code>. James is ten years old. Scott is fourteen years old.</p>
<p>卡莉有两个兄弟。詹姆斯十岁了。斯科特十四岁。</p>
<p>Carly has two pets. Jinx is a small, black cat. Diego is a large, <code>brown</code> dog.</p>
<p>卡莉有两只宠物。金克丝是一只小黑猫。迭戈是一只大的棕色狗。</p>
<p>Carly loves her family! 卡莉爱她的家人！</p>
<h2 align="center">articles-2</h2>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/icon_1.gif"
                      width="20" height="20"
                >

<p>What is under the <code>ground</code>?</p>
<p>地下有什么？</p>
<p><code>Plants</code> <code>grow</code> roots <code>underground</code>.</p>
<p>植物在地下长根。</p>
<p>Roots help a plant <code>stay</code> in the <code>earth</code>.</p>
<p>根帮助植物留在地球上。</p>
<p><code>Roots</code> help a plant grow tall.</p>
<p>根帮助植物长高。</p>
<p>A fox can make a home underground.</p>
<p>狐狸可以在地下安家。</p>
<p>A fox can stay <code>safe</code> in its <code>hole</code>.</p>
<p>狐狸在洞里可以保持安全。</p>
<p>A hole is a good home.</p>
<p>一个洞就是一个好家。</p>
<p><code>Sometimes</code> you can find water underground.</p>
<p>有时你可以在地下找到水。</p>
<p>Water from <code>rain</code> can make a <code>pool</code> underground.</p>
<p>雨水可以在地下形成一个水池。</p>
<p>This water can be used for drinking.</p>
<p>此水可用于饮用。</p>
<p>There are many <code>different</code> things underground.</p>
<p>地下有许多不同的东西。</p>
<p>Dig down under the ground and see what you can find!</p>
<p>往地下挖，看看能找到什么！</p>
<h2 align="center">articles-3</h2>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/icon-3.gif"
                      width="20" height="20"
                >

<p>A <code>rhinoceros</code> is big. <code>Elephants</code> are bigger. What is bigger than both of them? The blue <code>whale</code>. Blue whales are one of the biggest <code>animals</code> ever to have lived on earth.</p>
<p>犀牛很大。大象更大。什么比他们两个都大？蓝鲸。蓝鲸是地球上有史以来最大的动物之一。</p>
<p>An <code>average</code> blue whale <code>weighs</code> 136,000 kg (300,000 lb) and is about 30 m (100 ft) long. This is about as long as nine cars laid end to end! A blue whale’s <code>heart</code> is about the size of a small <code>van</code>. Its blood <code>vessels</code> (veins and arteries) are so large that a person could <code>actually</code> swim through them. A blue whale’s <code>tongue</code> weighs as much as an elephant!</p>
<p>蓝鲸平均重 136,000 公斤（300,000 磅），长约 30 m（100 英尺）。这大约相当于九辆车首尾相连那么长！蓝鲸的心脏大约有一辆小货车那么大。它的血管（静脉和动脉）非常大，人实际上可以在其中游泳。蓝鲸的舌头和大象一样重！</p>
<p>So what does this <code>gigantic</code> animal eat? You might be <code>surprised</code> to learn that the blue whale mainly eats krill, which are tiny <code>shrimp</code>. An <code>adult</code> blue whale can eat over 3600 kg (8000 lb) of krill every day.</p>
<p>那么这种巨大的动物吃什么？您可能会惊讶地发现蓝鲸主要吃磷虾，即小虾。一头成年蓝鲸每天可以吃掉超过 3600 公斤（8000 磅）的磷虾。</p>
<p>Once, hundreds of thousands of blue whales swam in <code>oceans</code> all over the world. Today, however, things are different. In the early 1900s, hunters killed almost all of the blue whales. They almost became <code>extinct</code>. Today, there are only about 20,000 blue whales left. It is now <code>illegal</code> to hunt or kill a blue whale. Maybe one day, they will fill the oceans once again.</p>
<p>曾经，数十万头蓝鲸在世界各地的海洋中游泳。然而今天，情况有所不同。 1900 年代初期，猎人捕杀了几乎所有的蓝鲸。他们几乎灭绝了。如今，蓝鲸只剩下约 20,000 头。现在捕猎或杀死蓝鲸是非法的。也许有一天，它们会再次充满海洋。</p>
<h2 align="center">articles-4</h2>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/icon-4.gif"
                      width="20" height="20"
                >

<p>Animals make different <code>types</code> of homes.</p>
<p>动物建造不同类型的家园。</p>
<p>An animal might live in a tree, a hole, or a <code>cave</code>.</p>
<p>动物可能生活在树上、洞里或山洞里。</p>
<p>A <code>squirrel</code> lives in a tree.</p>
<p>一只松鼠住在树上。</p>
<p>Squirrels like to eat <code>nuts</code>.</p>
<p>松鼠喜欢吃坚果。</p>
<p>Under the trees, squirrels find nuts.</p>
<p>松鼠在树下寻找坚果。</p>
<p>A <code>gopher</code> lives in a hole.</p>
<p>地鼠住在洞里。</p>
<p>Gophers like to <code>dig</code>.</p>
<p>地鼠喜欢挖掘。</p>
<p>Deep under the ground, gophers dig <code>tunnels</code>.</p>
<p>地鼠在地下深处挖掘隧道。</p>
<p>A bear lives in a cave.</p>
<p>一只熊住在一个山洞里。</p>
<p>Bears like to sleep during the day and hunt at night.</p>
<p>熊喜欢白天睡觉，晚上狩猎。</p>
<p>During the day, most bears hide in their caves.</p>
<p>白天，大多数熊躲在洞穴里。</p>
<h2 align="center">articles-5</h2>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/icon-6.gif"
                      width="20" height="20"
                >

<p>The <code>shower</code> in my bathroom is <code>broken</code>. I cannot turn it off. The water keeps coming out. I cannot stop it from coming out. The water is getting on the <code>floor</code>. It is getting on the <code>carpet</code>. It is getting on the wall. This is <code>terrible</code>. My bathroom is a <code>disaster</code>! I don’t know what to do. I need your help. I hope you get this <code>message</code> soon!</p>
<p>我浴室的淋浴坏了。我无法将其关闭。水不断流出来。我无法阻止它的出现。水正流到地板上。它正在地毯上。它快要爬到墙上了。这很糟糕。我的浴室简直就是一场灾难！我不知道该怎么办。我需要你的帮助。我希望你尽快收到这条消息！</p>
<p>Your friend<br>你的朋友</p>
<p>Richard<br>理查德</p>
]]></content>
      <categories>
        <category>English</category>
      </categories>
      <tags>
        <tag>English-Article</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker の 基本操作</title>
    <url>/2024/09/11/Development%20Tools/Docker%E5%85%A5%E9%97%A8/Docker%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<h2 id="Docker-镜像操作"><a href="#Docker-镜像操作" class="headerlink" title="Docker 镜像操作"></a>Docker 镜像操作</h2><h3 id="1-1-镜像获取"><a href="#1-1-镜像获取" class="headerlink" title="1.1 镜像获取"></a>1.1 镜像获取</h3><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker pull Name:Tag</span><br><span class="line">docker pull user/ImgName:Tag</span><br></pre></td></tr></table></figure></div>

<h3 id="1-2-查看镜像信息"><a href="#1-2-查看镜像信息" class="headerlink" title="1.2 查看镜像信息"></a>1.2 查看镜像信息</h3><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker images #列出所有镜像</span><br><span class="line"></span><br><span class="line">docker tag local_imag_name:tag imgname:tag #添加镜像新标签</span><br><span class="line">#使用docker rmi 可以删除标签存在多个标签时</span><br><span class="line"></span><br><span class="line">docker inspect Name:Tag  #查看镜像详细信息</span><br><span class="line">docker history Name:Tag 显示镜像的历史</span><br></pre></td></tr></table></figure></div>

<h3 id="1-3-搜寻镜像"><a href="#1-3-搜寻镜像" class="headerlink" title="1.3 搜寻镜像"></a>1.3 搜寻镜像</h3><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker search # 在 docker hub 中搜索镜像</span><br></pre></td></tr></table></figure></div>

<h3 id="1-4-删除清理镜像"><a href="#1-4-删除清理镜像" class="headerlink" title="1.4 删除清理镜像"></a>1.4 删除清理镜像</h3><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker rmi Name:Tag #删除镜像</span><br><span class="line">docker image prune  #清理镜像</span><br></pre></td></tr></table></figure></div>

<h3 id="1-5-创建镜像"><a href="#1-5-创建镜像" class="headerlink" title="1.5 创建镜像"></a>1.5 创建镜像</h3><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">#基于已有容器创建</span><br><span class="line">docker commit</span><br><span class="line"></span><br><span class="line">#基于本地模板导入</span><br><span class="line">docker import</span><br><span class="line"></span><br><span class="line">#基于Dockerfile创建</span><br><span class="line">docker build -t Name:Tag .</span><br></pre></td></tr></table></figure></div>

<h3 id="1-6-存出载入镜像"><a href="#1-6-存出载入镜像" class="headerlink" title="1.6 存出载入镜像"></a>1.6 存出载入镜像</h3><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">#导出镜像到本地</span><br><span class="line">docker save</span><br><span class="line"></span><br><span class="line">#载入镜像</span><br><span class="line">dcoker load</span><br></pre></td></tr></table></figure></div>

<h3 id="1-7-上传镜像"><a href="#1-7-上传镜像" class="headerlink" title="1.7 上传镜像"></a>1.7 上传镜像</h3><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">#上传本地镜像先添加tag</span><br><span class="line">docker tag Name:Tag user/ImgName:Tag</span><br><span class="line"></span><br><span class="line">#上传镜像到docker hub</span><br><span class="line">docker push Name:Tag</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="Docker-容器操作"><a href="#Docker-容器操作" class="headerlink" title="Docker 容器操作"></a>Docker 容器操作</h2><h3 id="2-1-容器创建"><a href="#2-1-容器创建" class="headerlink" title="2.1 容器创建"></a>2.1 容器创建</h3><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">#创建容器</span><br><span class="line">docker create</span><br><span class="line"></span><br><span class="line">#启动容器</span><br><span class="line">docker start</span><br><span class="line"></span><br><span class="line">#新建容器并启动</span><br><span class="line">docker run</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<h3 id="2-2-容器停止"><a href="#2-2-容器停止" class="headerlink" title="2.2 容器停止"></a>2.2 容器停止</h3><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">#终止容器</span><br><span class="line">docker stop</span><br><span class="line"></span><br><span class="line">#暂停容器</span><br><span class="line">docker pause</span><br></pre></td></tr></table></figure></div>

<h3 id="2-3-容器进入"><a href="#2-3-容器进入" class="headerlink" title="2.3 容器进入"></a>2.3 容器进入</h3><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">#进入容器</span><br><span class="line">docker exec -it</span><br></pre></td></tr></table></figure></div>

<h3 id="2-4-删除容器"><a href="#2-4-删除容器" class="headerlink" title="2.4 删除容器"></a>2.4 删除容器</h3><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">#删除容器</span><br><span class="line">docker rm</span><br></pre></td></tr></table></figure></div>

<h3 id="2-5-容器的导入导出"><a href="#2-5-容器的导入导出" class="headerlink" title="2.5 容器的导入导出"></a>2.5 容器的导入导出</h3><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">#导出容器</span><br><span class="line">docker export</span><br><span class="line"></span><br><span class="line">#导入容器</span><br><span class="line">docker import</span><br></pre></td></tr></table></figure></div>

<h3 id="2-6-查看容器"><a href="#2-6-查看容器" class="headerlink" title="2.6 查看容器"></a>2.6 查看容器</h3><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">#查看容器列表</span><br><span class="line">docker ps</span><br><span class="line"></span><br><span class="line">#查看容器详情</span><br><span class="line">docker inspect</span><br><span class="line"></span><br><span class="line">#查看容器内进程</span><br><span class="line">docker top</span><br><span class="line"></span><br><span class="line">#查看容器统计信息</span><br><span class="line">docker stats</span><br></pre></td></tr></table></figure></div>

<h3 id="2-7-其它指令"><a href="#2-7-其它指令" class="headerlink" title="2.7 其它指令"></a>2.7 其它指令</h3><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">#复制容器文件</span><br><span class="line">docker cp</span><br><span class="line"></span><br><span class="line">#查看变更</span><br><span class="line">docker diff</span><br><span class="line"></span><br><span class="line">#查看端口映射</span><br><span class="line">docker port</span><br><span class="line"></span><br><span class="line">#查看容器日志</span><br><span class="line">docker logs</span><br></pre></td></tr></table></figure></div>
]]></content>
      <categories>
        <category>Development Tools</category>
      </categories>
      <tags>
        <tag>Deve-Tool</tag>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker 仓库操作</title>
    <url>/2024/09/11/Development%20Tools/Docker%E5%85%A5%E9%97%A8/%E8%AE%BF%E9%97%AEDocker%E4%BB%93%E5%BA%93/</url>
    <content><![CDATA[
<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="9faaaaf138c610a5773b426aff5ae15514354e41f5a67486c824b092fbfd3ac1">5844f566621fccb9c583f0174433e530893e3f6a3d9380e6f64fa511999026defee4a88f332bf2d0db73ca7c25a4c6fd772bb8506735d2d6667c986fba4c4c11d81af77a7e833dca0ef597fe5e16de170a91b761cce324a21d5a1a6cc95828de29c99cdfc14e07d3da768e6eaad50030fb58448e157e281b0a9d511134a231f77322c1565cb21c75e4f88b04314195351b11976660ca4af6193effde4c1f73fb5154775265f84a567466640645de669ba25a27c185934b05b0a5895a8441b29b9b7effc0a28905b8ca6d0122026f2320749780c82989871e6a81e6693d279b1c72f27cfbf1137bb9d452d483451c6b7674f7288c15f076661063641467dbd52e2fddac4bd30d4f1015480c13ddaaad6442ec6a18dddc18cab698a224b4f5e7589363d7a3f56e5614e2316cb72a9e8438bc41f18b11459560952048d1e1f1063978fd1741a8cfdcaf300fdf2ba36c846dfb17d234ef7de842be469d01639d23c8859ae33a66af0cbf09246af051ef87e01aebea98c4aeaa6d37853b404338d7d9e0f244cc5d3e9b3ba07846d83051960fa0f8db86d243ed6536a58877b4753b51668e0c4e8632f36a0248a0fd8989394d42cf31487e4ec5494f49a71a6090d2b6c8154882752a39e982edd697d7290ea9920d2ba28d1a8520d5deb05cd52ecfbcd5ba942e32ed9de5f9514b7332a98be1731ca605fb07fc54d8be887ccd7bcf0bbab441de0cee47b1ad3021b9b81946ff215249c5bb21fa8717f4e943b524934237df50b516ef970ef57c60de9bb93fc2908f172bb6f81108673f55bf8fed94a5c013cd0353b2792d924da8af5eaa4bb95cb1a1dee5ccb28fb11d7de9b8bbc8e4</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<link href="/css/hbe.style.css" rel="stylesheet" type="text/css"><script data-swup-reload-script type="module" src="/js/plugins/hbe.js"></script>
<script data-swup-reload-script type="module">
import {initHBE} from "/js/plugins/hbe.js";
  console.log("hexo-blog-encrypt: loaded.");
    initHBE();
</script>
]]></content>
      <categories>
        <category>Development Tools</category>
      </categories>
      <tags>
        <tag>Deve-Tool</tag>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker 核心概念与安装配置</title>
    <url>/2024/09/11/Development%20Tools/Docker%E5%85%A5%E9%97%A8/%E5%88%9D%E8%AF%86Docker/</url>
    <content><![CDATA[<h3 id="1-1-初识-Docker"><a href="#1-1-初识-Docker" class="headerlink" title="1.1 初识 Docker"></a>1.1 初识 Docker</h3><ul>
<li>Docker 是基于 Go 语言实现的开源容器项目，诞生于 2013 年</li>
<li>Docker 项目已加入 Linux 基金会，并遵循 Apache 2.0 协议</li>
<li>Docker 提供了高效敏捷轻量的容器方案</li>
<li>Docker 构想实现“Build，Ship and Run Any App,Anywhere ”即一次封装到处运行</li>
</ul>
<h3 id="1-2-Docker-优点"><a href="#1-2-Docker-优点" class="headerlink" title="1.2 Docker 优点"></a>1.2 Docker 优点</h3><table>
<thead>
<tr>
<th>特性</th>
<th>容器</th>
<th>虚拟机</th>
</tr>
</thead>
<tbody><tr>
<td>启动速度</td>
<td>秒级</td>
<td>分钟级</td>
</tr>
<tr>
<td>性能</td>
<td>接近原生</td>
<td>较弱</td>
</tr>
<tr>
<td>内存代价</td>
<td>很小</td>
<td>较多</td>
</tr>
<tr>
<td>磁盘使用</td>
<td>一般为 MB</td>
<td>一般为 GB</td>
</tr>
<tr>
<td>隔离性</td>
<td>安全隔离</td>
<td>完全隔离</td>
</tr>
<tr>
<td>迁移性</td>
<td>优秀</td>
<td>一般</td>
</tr>
</tbody></table>
<h3 id="1-3-Docker-核心概念"><a href="#1-3-Docker-核心概念" class="headerlink" title="1.3 Docker 核心概念"></a>1.3 Docker 核心概念</h3><ul>
<li>Docker 镜像<ul>
<li>Docker 镜像类似于虚拟机镜像只读，是创建容器的模板</li>
</ul>
</li>
<li>Docker 容器<ul>
<li>Docker 容器类似于一个轻量级的沙箱，镜像实例好比一个 OsUser</li>
</ul>
</li>
<li>Docker 仓库<ul>
<li>Docker 仓库类似于 Github 仓库，用于存放镜像文件的地方</li>
<li>Registry 存放 Docker 镜像仓库，仓库存放不同版本的同一镜像</li>
</ul>
</li>
</ul>
<h3 id="1-4-Docker-安装"><a href="#1-4-Docker-安装" class="headerlink" title="1.4 Docker 安装"></a>1.4 Docker 安装</h3><ul>
<li>Ubuntu 安装 <a class="link"   href="https://yeasy.gitbook.io/docker_practice" >^1 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><ul>
<li>脚本自动安装<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line"># $ curl -fsSL test.docker.com -o get-docker.sh</span><br><span class="line">$ curl -fsSL get.docker.com -o get-docker.sh</span><br><span class="line">$ sudo sh get-docker.sh --mirror Aliyun</span><br><span class="line"># $ sudo sh get-docker.sh --mirror AzureChinaCloud</span><br></pre></td></tr></table></figure></div></li>
<li>启动 Docker<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ sudo systemctl enable docker</span><br><span class="line">$ sudo systemctl start docker</span><br></pre></td></tr></table></figure></div></li>
<li>建立 Docker 用户组<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ sudo groupadd docker</span><br></pre></td></tr></table></figure></div></li>
<li>将当前用户加入 docker 组<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ sudo usermod -aG docker $USER</span><br></pre></td></tr></table></figure></div></li>
</ul>
</li>
<li>CentOS 安装<ul>
<li>脚本安装<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line"># $ curl -fsSL test.docker.com -o get-docker.sh</span><br><span class="line">$ curl -fsSL get.docker.com -o get-docker.sh</span><br><span class="line">$ sudo sh get-docker.sh --mirror Aliyun</span><br><span class="line"># $ sudo sh get-docker.sh --mirror AzureChinaCloud</span><br></pre></td></tr></table></figure></div></li>
</ul>
</li>
<li>MacOS 安装<ul>
<li>直接下载应用安装</li>
</ul>
</li>
<li>Windows 安装 <a class="link"   href="https://www.cnblogs.com/marchxd/p/16398409.html" >^2 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><ul>
<li>安装 Hyper-v (存为 bat 文件执行)<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">pushd &quot;%~dp0&quot;</span><br><span class="line">dir /b %SystemRoot%\servicing\Packages\*Hyper-V*.mum &gt;hyper-v.txt</span><br><span class="line">for /f %%i in (&#x27;findstr /i . hyper-v.txt 2^&gt;nul&#x27;) do dism /online /norestart /add-package:&quot;%SystemRoot%\servicing\Packages\%%i&quot;</span><br><span class="line">del hyper-v.txt</span><br><span class="line">Dism /online /enable-feature /featurename:Microsoft-Hyper-V-All /LimitAccess /ALL</span><br></pre></td></tr></table></figure></div></li>
<li>开启 Hyper-v<ul>
<li>启动 WSL<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart</span><br></pre></td></tr></table></figure></div></li>
<li>启动虚拟机<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart</span><br></pre></td></tr></table></figure></div></li>
</ul>
</li>
<li>下载安装 WSL2<ul>
<li><a class="link"   href="https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi" >WSL2 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>设为默认版本<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">wsl --set-default-version 2</span><br></pre></td></tr></table></figure></div></li>
</ul>
</li>
<li>安装 DockersDesktop</li>
<li>闪退重启执行<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">wsl --update</span><br><span class="line">netsh winsock reset</span><br><span class="line">wsl --shutdown</span><br></pre></td></tr></table></figure></div></li>
</ul>
</li>
</ul>
<h3 id="1-5-Docker-配置"><a href="#1-5-Docker-配置" class="headerlink" title="1.5 Docker 配置"></a>1.5 Docker 配置</h3><ul>
<li><p>配置镜像位置</p>
<ul>
<li>在 DockerDesktop 设置中 Resources–&gt;Advanced–&gt;修改 Disk image location</li>
</ul>
</li>
<li><p>配置下载源</p>
<ul>
<li>在 DockerDesktop 设置中 Docker Engine 中修改并应用</li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;builder&quot;: &#123;</span><br><span class="line">&quot;gc&quot;: &#123;</span><br><span class="line">  &quot;defaultKeepStorage&quot;: &quot;20GB&quot;,</span><br><span class="line">  &quot;enabled&quot;: true</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&quot;experimental&quot;: false,</span><br><span class="line">&quot;features&quot;: &#123;</span><br><span class="line">&quot;buildkit&quot;: true</span><br><span class="line">&#125;,</span><br><span class="line">&quot;registry-mirrors&quot;: [</span><br><span class="line">&quot;https://registry.docker-cn.com&quot;,</span><br><span class="line">&quot;http://hub-mirror.c.163.com&quot;,</span><br><span class="line">&quot;https://docker.mirrors.ustc.edu.cn&quot;,</span><br><span class="line">&quot;https://cr.console.aliyun.com&quot;,</span><br><span class="line">&quot;https://mirror.ccs.tencentyun.com&quot;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

</li>
</ul>
]]></content>
      <categories>
        <category>Development Tools</category>
      </categories>
      <tags>
        <tag>Deve-Tool</tag>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>CSS 基本教程</title>
    <url>/2024/09/11/Front-End%20Developer/CSS%E5%85%A5%E9%97%A8/%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[
<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="829b61eed01469b85770dd792710a5ff62e146b5b872248b5a47dac2288909ef"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<link href="/css/hbe.style.css" rel="stylesheet" type="text/css"><script data-swup-reload-script type="module" src="/js/plugins/hbe.js"></script>
<script data-swup-reload-script type="module">
import {initHBE} from "/js/plugins/hbe.js";
  console.log("hexo-blog-encrypt: loaded.");
    initHBE();
</script>
]]></content>
      <categories>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>Front-End Developer</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>Git 入门</title>
    <url>/2024/09/11/Development%20Tools/Git%E5%85%A5%E9%97%A8/Git/</url>
    <content><![CDATA[
<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="c22e9494d66cec01f84c9e1b87cab8e40c51dc764f658793768a780235502d66">5844f566621fccb9c583f0174433e5301661b317bde36d366eebd9d9b250e235</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<link href="/css/hbe.style.css" rel="stylesheet" type="text/css"><script data-swup-reload-script type="module" src="/js/plugins/hbe.js"></script>
<script data-swup-reload-script type="module">
import {initHBE} from "/js/plugins/hbe.js";
  console.log("hexo-blog-encrypt: loaded.");
    initHBE();
</script>
]]></content>
      <categories>
        <category>Development Tools</category>
      </categories>
      <tags>
        <tag>Deve-Tool</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>/1970/01/01/Theory/Algorithm/Backtracking/</url>
    <content><![CDATA[<h1 id="回溯"><a href="#回溯" class="headerlink" title="回溯"></a>回溯</h1>]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/1970/01/01/Theory/Algorithm/Arrays&amp;linked-lists/</url>
    <content><![CDATA[<h1 id="数组-链表"><a href="#数组-链表" class="headerlink" title="数组&amp;链表"></a>数组&amp;链表</h1>]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/1970/01/01/Theory/Algorithm/DataStructure/</url>
    <content><![CDATA[<h1 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h1>]]></content>
  </entry>
  <entry>
    <title>HTML 基本教程</title>
    <url>/2024/09/11/Front-End%20Developer/html%E5%85%A5%E9%97%A8/%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<h3 id="1-1-html-基本结构"><a href="#1-1-html-基本结构" class="headerlink" title="1.1 html 基本结构"></a>1.1 html 基本结构</h3><div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<h3 id="1-2-基础语法"><a href="#1-2-基础语法" class="headerlink" title="1.2 基础语法"></a>1.2 基础语法</h3><ul>
<li>注释</li>
</ul>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 这是代码注释 --&gt;</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>段落 Paragraph</li>
</ul>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我来自快速参考<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>HTML 链接</li>
</ul>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://github.com/jaywcjlove/reference&quot;</span>&gt;</span> Github <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://developer.mozilla.org/zh-CN/&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;mdn_logo.svg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;MDN Web 文档主页&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>Image 标签</li>
</ul>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span></span></span><br><span class="line"><span class="tag">  <span class="attr">loading</span>=<span class="string">&quot;lazy&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">src</span>=<span class="string">&quot;https://xxx.png&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">alt</span>=<span class="string">&quot;在此处描述图像&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">width</span>=<span class="string">&quot;400&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">height</span>=<span class="string">&quot;400&quot;</span></span></span><br><span class="line"><span class="tag">/&gt;</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>文本格式标签</li>
</ul>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span>粗体文字<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>这段文字很重要<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span>&gt;</span>斜体文本<span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span>这段文字被强调<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">u</span>&gt;</span>下划线文本<span class="tag">&lt;/<span class="name">u</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span>预格式化文本<span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">code</span>&gt;</span>源代码<span class="tag">&lt;/<span class="name">code</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">del</span>&gt;</span>删除的文字<span class="tag">&lt;/<span class="name">del</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mark</span>&gt;</span>突出显示的文本 (HTML5)<span class="tag">&lt;/<span class="name">mark</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ins</span>&gt;</span>插入的文本<span class="tag">&lt;/<span class="name">ins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sup</span>&gt;</span>使文本上标<span class="tag">&lt;/<span class="name">sup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sub</span>&gt;</span>使文本下标<span class="tag">&lt;/<span class="name">sub</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">small</span>&gt;</span>使文本变小<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span>预格式化文本<span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">kbd</span>&gt;</span>Ctrl<span class="tag">&lt;/<span class="name">kbd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">blockquote</span>&gt;</span>文本块引用<span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>标题</li>
</ul>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是标题 1<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>这是标题 2<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>这是标题 3<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>这是标题 4<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h5</span>&gt;</span>这是标题 5<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h6</span>&gt;</span>这是标题 6<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>Section Divisions</li>
</ul>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">页面内容的划分或部分 <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span> 其他内容中的文本部分</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">文本段落 <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">换行</span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line">水平分割线</span><br></pre></td></tr></table></figure></div>

<ul>
<li>内部框架</li>
</ul>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span></span></span><br><span class="line"><span class="tag">  <span class="attr">id</span>=<span class="string">&quot;inlineFrameExample&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">title</span>=<span class="string">&quot;Inline Frame Example&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">height</span>=<span class="string">&quot;200&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">src</span>=<span class="string">&quot;https://www.openstreetmap.org/export/embed.html?bbox=-0.004017949104309083%2C51.47612752641776%2C0.00030577182769775396%2C51.478569861898606&amp;layer=mapnik&quot;</span></span></span><br><span class="line"><span class="tag">&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>HTML 中的 JavaScript</li>
</ul>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> text = <span class="string">&quot;Hello 快速参考&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">alert</span>(text);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 外部的JavaScript 文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;app.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>HTML 中的 CSS</li>
</ul>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">h1</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: purple;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 外部样式表 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;style.css&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<h3 id="1-3-HTML-表格"><a href="#1-3-HTML-表格" class="headerlink" title="1.3 HTML 表格"></a>1.3 HTML 表格</h3><ul>
<li>Table 示例</li>
</ul>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>name<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>age<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>Roberta<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>39<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>Oliver<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>25<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Txt"><figure class="iseeu highlight txt"><table><tr><td class="code"><pre><span class="line">&lt;table&gt;	    定义表格</span><br><span class="line">&lt;th&gt;	    定义表格中的标题单元格</span><br><span class="line">&lt;tr&gt;	    定义表中的行</span><br><span class="line">&lt;td&gt;	    定义表格中的单元格</span><br><span class="line">&lt;caption&gt;	定义表格标题</span><br><span class="line">&lt;colgroup&gt;	定义一组列</span><br><span class="line">&lt;col&gt;	    定义表中的列</span><br><span class="line">&lt;thead&gt;	    对标题内容进行分组</span><br><span class="line">&lt;tbody&gt;	    将正文内容分组</span><br><span class="line">&lt;tfoot&gt;	    对页脚内容进行分组</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Txt"><figure class="iseeu highlight txt"><table><tr><td class="code"><pre><span class="line">colspan	  单元格应跨越的列数</span><br><span class="line">headers	  单元格与一个或多个标题单元格相关</span><br><span class="line">rowspan	  单元格应跨越的行数</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Txt"><figure class="iseeu highlight txt"><table><tr><td class="code"><pre><span class="line">colspan	  单元格应跨越的列数</span><br><span class="line">headers	  单元格与一个或多个标题单元格相关</span><br><span class="line">rowspan	  单元格应跨越的行数</span><br><span class="line">abbr	  单元格内容的描述</span><br><span class="line">scope	  表头元素(在&lt;th&gt;中定义)关联的单元格</span><br></pre></td></tr></table></figure></div>

<h3 id="1-4-HTML-列表"><a href="#1-4-HTML-列表" class="headerlink" title="1.4 HTML 列表"></a>1.4 HTML 列表</h3><div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 无序列表 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>I&#x27;m an item<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>I&#x27;m another item<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>I&#x27;m another item<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 有序列表 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>I&#x27;m the first item<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>I&#x27;m the second item<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>I&#x27;m the third item<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 定义列表 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>A Term<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>Definition of a term<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>Another Term<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>Definition of another term<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<h3 id="1-5-HTML-表单"><a href="#1-5-HTML-表单" class="headerlink" title="1.5 HTML 表单"></a>1.5 HTML 表单</h3><div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span> <span class="attr">action</span>=<span class="string">&quot;api/login&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;mail&quot;</span>&gt;</span>邮箱: <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> <span class="attr">id</span>=<span class="string">&quot;mail&quot;</span> <span class="attr">name</span>=<span class="string">&quot;mail&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;pw&quot;</span>&gt;</span>密码:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">id</span>=<span class="string">&quot;pw&quot;</span> <span class="attr">name</span>=<span class="string">&quot;pw&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;登录&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">id</span>=<span class="string">&quot;ck&quot;</span> <span class="attr">name</span>=<span class="string">&quot;ck&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;ck&quot;</span>&gt;</span>记住我<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Txt"><figure class="iseeu highlight txt"><table><tr><td class="code"><pre><span class="line">name	  脚本形式的名称</span><br><span class="line">action	  表单脚本的URL</span><br><span class="line">method	  HTTP方法，POST/GET (默认)</span><br><span class="line">enctype	  介质类型，请参见enctype</span><br><span class="line">onsubmit  提交表单时运行</span><br><span class="line">onreset	  在窗体重置时运行</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 嵌套标签 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span></span></span><br><span class="line"><span class="tag">  &gt;</span>Click me</span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &#x27;for&#x27; 属性 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;user&quot;</span>&gt;</span>Click me<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;Name&quot;</span>&gt;</span>Name:<span class="tag">&lt;/<span class="name">label</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;Name&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">rows</span>=<span class="string">&quot;2&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;30&quot;</span> <span class="attr">name</span>=<span class="string">&quot;address&quot;</span> <span class="attr">id</span>=<span class="string">&quot;address&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">id</span>=<span class="string">&quot;m&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;m&quot;</span>&gt;</span>Male<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">id</span>=<span class="string">&quot;f&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;f&quot;</span>&gt;</span>Female<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;s&quot;</span> <span class="attr">id</span>=<span class="string">&quot;soc&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;soc&quot;</span>&gt;</span>Soccer<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;s&quot;</span> <span class="attr">id</span>=<span class="string">&quot;bas&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;bas&quot;</span>&gt;</span>Baseball<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;city&quot;</span>&gt;</span>City:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;city&quot;</span> <span class="attr">id</span>=<span class="string">&quot;city&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span>Sydney<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>&gt;</span>Melbourne<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span>&gt;</span>Cromwell<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">legend</span>&gt;</span>Your favorite monster<span class="tag">&lt;/<span class="name">legend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">id</span>=<span class="string">&quot;kra&quot;</span> <span class="attr">name</span>=<span class="string">&quot;m&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;kraken&quot;</span>&gt;</span>Kraken<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">id</span>=<span class="string">&quot;sas&quot;</span> <span class="attr">name</span>=<span class="string">&quot;m&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;sas&quot;</span>&gt;</span>Sasquatch<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;b&quot;</span>&gt;</span>Choose a browser: <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">list</span>=<span class="string">&quot;list&quot;</span> <span class="attr">id</span>=<span class="string">&quot;b&quot;</span> <span class="attr">name</span>=<span class="string">&quot;browser&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">datalist</span> <span class="attr">id</span>=<span class="string">&quot;list&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;Chrome&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;Firefox&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;Internet Explorer&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;Opera&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;Safari&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;Microsoft Edge&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">datalist</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;register.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;foo&quot;</span>&gt;</span>Name:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">id</span>=<span class="string">&quot;foo&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">value</span>=<span class="string">&quot;重置&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<h3 id="1-6-HTML5-新特性"><a href="#1-6-HTML5-新特性" class="headerlink" title="1.6 HTML5 新特性"></a>1.6 HTML5 新特性</h3><ul>
<li>页面</li>
</ul>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">nav</span>&gt;</span>...<span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">main</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>快速参考<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>©2023 快速参考<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>标题导航</li>
</ul>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>编辑页面<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Twitter<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Facebook<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>HTML5 Tags</li>
</ul>
<div class="highlight-container" data-rel="Txt"><figure class="iseeu highlight txt"><table><tr><td class="code"><pre><span class="line">article	  独立的内容</span><br><span class="line">aside	  次要内容</span><br><span class="line">audio	  嵌入声音或音频流</span><br><span class="line">bdi	      双向隔离元件</span><br><span class="line">canvas	  通过JavaScript绘制图形</span><br><span class="line">data	  机器可读内容</span><br><span class="line">datalist  一组预定义选项</span><br><span class="line">details	  其他信息</span><br><span class="line">dialog	  对话框或子窗口</span><br><span class="line">embed	  嵌入外部应用程序</span><br><span class="line">figcaption图形的标题或图例</span><br><span class="line">figure	  插图</span><br><span class="line">footer	  页脚或最不重要的</span><br><span class="line">header	  刊头或重要信息</span><br><span class="line">main	  文件的主要内容</span><br><span class="line">mark	  突出显示的文本</span><br><span class="line">meter	  已知范围内的标量值</span><br><span class="line">nav	      导航链接的一部分</span><br><span class="line">output	  计算的结果</span><br><span class="line">picture	  用于多个图像源的容器</span><br><span class="line">progress  任务的完成进度</span><br><span class="line">rp	      提供回退括号</span><br><span class="line">rt	      定义字符的发音</span><br><span class="line">ruby	  表示ruby注释</span><br><span class="line">section	  一系列相关内容中的组</span><br><span class="line">source	  媒体元素的资源</span><br><span class="line">summary	  元素的摘要</span><br><span class="line">template  定义HTML片段</span><br><span class="line">time	  时间或日期</span><br><span class="line">track	  媒体元素的字幕信息</span><br><span class="line">video	  嵌入视频</span><br><span class="line">wbr	      换行机会</span><br></pre></td></tr></table></figure></div>

<ul>
<li>HTML5 Video</li>
</ul>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">controls</span>=<span class="string">&quot;&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span></span></span><br><span class="line"><span class="tag">    <span class="attr">src</span>=<span class="string">&quot;https://interactive-examples.mdn.mozilla.net/media/cc0-videos/flower.mp4&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">type</span>=<span class="string">&quot;video/mp4&quot;</span></span></span><br><span class="line"><span class="tag">  /&gt;</span></span><br><span class="line">  很抱歉，您的浏览器不支持嵌入式视频。</span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>HTML5 Audio</li>
</ul>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span></span></span><br><span class="line"><span class="tag">  <span class="attr">controls</span></span></span><br><span class="line"><span class="tag">  <span class="attr">src</span>=<span class="string">&quot;https://interactive-examples.mdn.mozilla.net/media/cc0-audio/t-rex-roar.mp3&quot;</span></span></span><br><span class="line"><span class="tag">&gt;</span></span><br><span class="line">  您的浏览器不支持音频元素。</span><br><span class="line"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>HTML5 Ruby</li>
</ul>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ruby</span>&gt;</span></span><br><span class="line">  汉 <span class="tag">&lt;<span class="name">rp</span>&gt;</span>(<span class="tag">&lt;/<span class="name">rp</span>&gt;</span><span class="tag">&lt;<span class="name">rt</span>&gt;</span>hàn<span class="tag">&lt;/<span class="name">rt</span>&gt;</span><span class="tag">&lt;<span class="name">rp</span>&gt;</span>)<span class="tag">&lt;/<span class="name">rp</span>&gt;</span> 字 <span class="tag">&lt;<span class="name">rp</span>&gt;</span>(<span class="tag">&lt;/<span class="name">rp</span>&gt;</span><span class="tag">&lt;<span class="name">rt</span>&gt;</span>zì<span class="tag">&lt;/<span class="name">rt</span>&gt;</span><span class="tag">&lt;<span class="name">rp</span>&gt;</span>)<span class="tag">&lt;/<span class="name">rp</span>&gt;</span> 拼</span><br><span class="line">  <span class="tag">&lt;<span class="name">rp</span>&gt;</span>(<span class="tag">&lt;/<span class="name">rp</span>&gt;</span><span class="tag">&lt;<span class="name">rt</span>&gt;</span>pīn<span class="tag">&lt;/<span class="name">rt</span>&gt;</span><span class="tag">&lt;<span class="name">rp</span>&gt;</span>)<span class="tag">&lt;/<span class="name">rp</span>&gt;</span> 音 <span class="tag">&lt;<span class="name">rp</span>&gt;</span>(<span class="tag">&lt;/<span class="name">rp</span>&gt;</span><span class="tag">&lt;<span class="name">rt</span>&gt;</span>yīn<span class="tag">&lt;/<span class="name">rt</span>&gt;</span><span class="tag">&lt;<span class="name">rp</span>&gt;</span>)<span class="tag">&lt;/<span class="name">rp</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ruby</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>HTML5 kdi</li>
</ul>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>User <span class="tag">&lt;<span class="name">bdi</span>&gt;</span>hrefs<span class="tag">&lt;/<span class="name">bdi</span>&gt;</span>: 60 points<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>User <span class="tag">&lt;<span class="name">bdi</span>&gt;</span>jdoe<span class="tag">&lt;/<span class="name">bdi</span>&gt;</span>: 80 points<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>User <span class="tag">&lt;<span class="name">bdi</span>&gt;</span>إيان<span class="tag">&lt;/<span class="name">bdi</span>&gt;</span>: 90 points<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>HTML5 progress</li>
</ul>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">progress</span> <span class="attr">value</span>=<span class="string">&quot;50&quot;</span> <span class="attr">max</span>=<span class="string">&quot;100&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">progress</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>HTML5 mark</li>
</ul>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我爱<span class="tag">&lt;<span class="name">mark</span>&gt;</span>备忘清单<span class="tag">&lt;/<span class="name">mark</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
]]></content>
      <categories>
        <category>HTML</category>
      </categories>
      <tags>
        <tag>Front-End Developer</tag>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>/1970/01/01/Theory/Algorithm/Divide&amp;Conquer/</url>
    <content><![CDATA[<h1 id="分治"><a href="#分治" class="headerlink" title="分治"></a>分治</h1>]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/1970/01/01/Theory/Algorithm/Dynamic-Programming/</url>
    <content><![CDATA[<h1 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h1>]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/1970/01/01/Theory/Algorithm/Greedy/</url>
    <content><![CDATA[<h1 id="贪心"><a href="#贪心" class="headerlink" title="贪心"></a>贪心</h1>]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/1970/01/01/Theory/Algorithm/Graph/</url>
    <content><![CDATA[<h1 id="图"><a href="#图" class="headerlink" title="图"></a>图</h1>]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/1970/01/01/Theory/Algorithm/Hash-table/</url>
    <content><![CDATA[<h1 id="哈希表"><a href="#哈希表" class="headerlink" title="哈希表"></a>哈希表</h1>]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/1970/01/01/Theory/Algorithm/Introduction/</url>
    <content><![CDATA[<h1 id="绪论"><a href="#绪论" class="headerlink" title="绪论"></a>绪论</h1>]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/1970/01/01/Theory/Algorithm/Heap/</url>
    <content><![CDATA[<h1 id="堆"><a href="#堆" class="headerlink" title="堆"></a>堆</h1>]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/1970/01/01/Theory/Algorithm/Searching/</url>
    <content><![CDATA[<h1 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h1>]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/1970/01/01/Theory/Algorithm/Sorting/</url>
    <content><![CDATA[<h1 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h1>]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/1970/01/01/Theory/Algorithm/Tree/</url>
    <content><![CDATA[<h1 id="树"><a href="#树" class="headerlink" title="树"></a>树</h1>]]></content>
  </entry>
  <entry>
    <title>python TODO</title>
    <url>/2024/09/11/Programming-Language/Python%E5%85%A5%E9%97%A8/py-todo/</url>
    <content><![CDATA[
<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="4f519fac1e666e61e3cfcb57b5f42175f314b2b34c2b547ababb964d07e61d88"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<link href="/css/hbe.style.css" rel="stylesheet" type="text/css"><script data-swup-reload-script type="module" src="/js/plugins/hbe.js"></script>
<script data-swup-reload-script type="module">
import {initHBE} from "/js/plugins/hbe.js";
  console.log("hexo-blog-encrypt: loaded.");
    initHBE();
</script>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>Programming-Language</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>PyInstaller的使用</title>
    <url>/2024/09/11/Programming-Language/Python%E5%85%A5%E9%97%A8/PyInstaller%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[
<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="c22e9494d66cec01f84c9e1b87cab8e40c51dc764f658793768a780235502d66">5844f566621fccb9c583f0174433e5301661b317bde36d366eebd9d9b250e235</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<link href="/css/hbe.style.css" rel="stylesheet" type="text/css"><script data-swup-reload-script type="module" src="/js/plugins/hbe.js"></script>
<script data-swup-reload-script type="module">
import {initHBE} from "/js/plugins/hbe.js";
  console.log("hexo-blog-encrypt: loaded.");
    initHBE();
</script>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>Programming-Language</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>python 基础数据类型及控制结构</title>
    <url>/2024/09/11/Programming-Language/Python%E5%85%A5%E9%97%A8/python%E5%9F%BA%E7%A1%80-1/</url>
    <content><![CDATA[<h3 id="1-变量及简单数据类型"><a href="#1-变量及简单数据类型" class="headerlink" title="1.变量及简单数据类型"></a>1.<strong>变量及简单数据类型</strong></h3><ul>
<li><p><strong>变量</strong></p>
<ul>
<li>合法字符<ul>
<li>只能包含字母、数字和下划线。</li>
<li>不能以数字开头</li>
<li>区分大小写</li>
<li>不能使用关键字作为变量名</li>
</ul>
</li>
<li>命名习惯<ul>
<li>应反应变量的含义</li>
<li>推荐全小写与下划线分割的命名格式</li>
<li>类名的每个单词的首字母都应大写，而不是使用下划线分隔。</li>
</ul>
</li>
<li>私有变量及常量<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/icon-5.gif"
                      width="20" height="20"
                ><ul>
<li>单下划线开头表示受保护不应直接访问</li>
<li>双下划线开头会触发名称修饰机制用来避免子类覆盖</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>字符串</strong></p>
<ul>
<li><p>字符串创建</p>
<ul>
<li>单引号或双引号、长端落三引号</li>
</ul>
</li>
<li><p>访问字符及切片<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/icon-5.gif"
                      width="20" height="20"
                ></p>
<ul>
<li><p>正向索引从<code>0</code>开始、反向索引从<code>-1</code>开始</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">str1 = <span class="string">&quot;Hello, World!&quot;</span></span><br><span class="line">first_char = str1[<span class="number">0</span>]   <span class="comment"># &#x27;H&#x27;</span></span><br><span class="line">sub_str1 = str1[<span class="number">0</span>:<span class="number">5</span>]   <span class="comment"># &#x27;Hello&#x27;</span></span><br><span class="line">sub_str2 = str1[<span class="number">7</span>:]    <span class="comment"># &#x27;World!&#x27;</span></span><br><span class="line">sub_str3 = str1[:<span class="number">5</span>]    <span class="comment"># &#x27;Hello&#x27;</span></span><br><span class="line">sub_str4 = str1[::<span class="number">2</span>]   <span class="comment"># &#x27;Hlo ol!&#x27; (步长为2)</span></span><br></pre></td></tr></table></figure></div></li>
</ul>
</li>
<li><p>字符串拼接与重复</p>
<ul>
<li>使用 <code>+ </code>运算符或 <code>join() </code>方法拼接字符串。</li>
<li>使用 <code>*</code> 运算符重复字符串。</li>
</ul>
</li>
<li><p>字符串常用函数<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/icon-5.gif"
                      width="20" height="20"
                ></p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">str_length = <span class="built_in">len</span>(<span class="built_in">str</span>)                                   <span class="comment"># 获取字符串长度</span></span><br><span class="line">str_position = <span class="built_in">str</span>.find(<span class="string">&quot;str-content&quot;</span>)                  <span class="comment"># 查找子字符串位置</span></span><br><span class="line">str_exists = <span class="string">&quot;str-content&quot;</span> <span class="keyword">in</span> <span class="built_in">str</span>                       <span class="comment"># 判断子字符串是否存在</span></span><br><span class="line">new_str = <span class="built_in">str</span>.replace(<span class="string">&quot;old-content&quot;</span>, <span class="string">&quot;new-content&quot;</span>)     <span class="comment"># 替换子字符串</span></span><br><span class="line">upper_str = <span class="built_in">str</span>.upper()                                 <span class="comment"># 大写</span></span><br><span class="line">lower_str = <span class="built_in">str</span>.lower()                                 <span class="comment"># 小写</span></span><br><span class="line">capitalized = <span class="built_in">str</span>.capitalize()                          <span class="comment"># 首字母大写</span></span><br><span class="line">title_str = <span class="built_in">str</span>.title()                                 <span class="comment"># 首字母大写</span></span><br><span class="line"><span class="built_in">str</span>.strip()                                             <span class="comment"># 去除首尾空格</span></span><br><span class="line"><span class="built_in">str</span>.lstrip()                                            <span class="comment"># 去除首部空格</span></span><br><span class="line"><span class="built_in">str</span>.rstrip()                                            <span class="comment"># 去除尾部空格</span></span><br><span class="line"><span class="built_in">str</span>.split(<span class="string">&quot;,&quot;</span>)                                          <span class="comment"># 分割字符串将字符串分割为列表，默认以空格分割</span></span><br></pre></td></tr></table></figure></div></li>
<li><p>字符串格式化<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/icon-5.gif"
                      width="20" height="20"
                ></p>
<ul>
<li><code>%</code> 运算符、<code>f</code> 字符串、<code>format()</code> 方法<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">name = <span class="string">&quot;John&quot;</span></span><br><span class="line">age = <span class="number">25</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;%s :%d &quot;</span> % (name, age))                  <span class="comment">#运算符格式化</span></span><br><span class="line">formatted_str = <span class="string">&quot;Hello, &#123;&#125;!&quot;</span>.<span class="built_in">format</span>(<span class="string">&quot;John&quot;</span>)     <span class="comment">#f 字符串格式化</span></span><br><span class="line">f_str = <span class="string">f&quot;Hello, <span class="subst">&#123;name&#125;</span>!&quot;</span>                       <span class="comment">#format() 方法格式化</span></span><br></pre></td></tr></table></figure></div></li>
</ul>
</li>
</ul>
</li>
<li><p><strong>数字类型</strong></p>
<ul>
<li><strong>整数类型</strong><ul>
<li>没有小数部分、可以为正负 0</li>
<li>无限精度、可表示多进制</li>
</ul>
</li>
<li><strong>浮点数类型</strong><ul>
<li>有小数部分、双精度 64 位浮点数存储 -可以使用科学计数法</li>
</ul>
</li>
<li><strong>复数类型</strong><ul>
<li>表示复数，形式为 a + bj</li>
</ul>
</li>
<li><strong>类型转换</strong><ul>
<li><code>int()</code>、<code>float()</code>、<code>complex()</code>、<code>str()</code>、<code>bool()</code></li>
</ul>
</li>
</ul>
</li>
<li><p><strong>布尔类型</strong></p>
<ul>
<li>布尔值:<code>True</code>、<code>False</code></li>
<li>布尔类型转换规则<ul>
<li>数值：0 转换为 <code>False</code>，非 0 转换为 <code>True</code></li>
<li>字符串：空字符串为 <code>False</code>，非空字符串为 <code>True</code></li>
<li>列表、元组、字典、集合：空容器转换为 <code>False</code>，非空容器转换为 <code>True</code>。</li>
</ul>
</li>
<li>布尔值的内置函数<ul>
<li><code>bool()</code>、<code>all()</code>、<code>any()</code></li>
</ul>
</li>
</ul>
</li>
<li><p><strong>None 类型</strong></p>
<ul>
<li>使用 <code>is</code> 或 <code>is not</code> 运算符来判断一个变量是否为 None，而不是使用 &#x3D;&#x3D;</li>
<li><code>None</code> 是 Python 中表示“无值”或“空值”的特殊类型。</li>
</ul>
</li>
<li><p><strong>运算符</strong><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/icon-5.gif"
                      width="20" height="20"
                ></p>
<ul>
<li><strong>算术运算符</strong><ul>
<li><code>+</code>、<code>-</code>、<code>*</code>、<code>/</code>、<code>//</code>、<code>%</code>、<code>**</code></li>
</ul>
</li>
<li><strong>比较运算符</strong><ul>
<li><code>==</code>、<code>!=</code>、<code>&gt;</code>、<code>&lt;</code>、<code>&gt;=</code>、<code>&lt;=</code></li>
</ul>
</li>
<li><strong>逻辑运算符</strong><ul>
<li><code>and</code>、<code>or</code>、<code>not</code></li>
</ul>
</li>
<li><strong>成员运算符</strong><ul>
<li><code>in</code>、<code>not in</code></li>
</ul>
</li>
<li><strong>身份运算符</strong><ul>
<li><code>is</code>、<code>is not</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="2-控制结构"><a href="#2-控制结构" class="headerlink" title="2.控制结构"></a>2.<strong>控制结构</strong></h3><ul>
<li><p><strong>条件语句</strong></p>
<ul>
<li>基本<code>if</code>语句</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> 条件:  <span class="comment"># 条件为真执行、条件为否跳过</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li><code>if-else</code>语句</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> condition:</span><br><span class="line">  <span class="comment"># 如果 condition 为 True 执行此代码块</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">  <span class="comment"># 如果 condition 为 False 执行此代码块</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li><code>if-elif-else</code>语句</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> condition1:</span><br><span class="line">  <span class="comment"># 如果 condition1 为 True 执行此代码块</span></span><br><span class="line"><span class="keyword">elif</span> condition2:</span><br><span class="line">  <span class="comment"># 如果 condition1 为 False 并且 condition2 为 True 执行此代码块</span></span><br><span class="line"><span class="keyword">elif</span> condition3:</span><br><span class="line">  <span class="comment"># 如果 condition1 为 False 并且 condition2 为 False 并且 condition3 为 True 执行此代码块</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">  <span class="comment"># 如果所有条件都为 False，执行此代码块</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>嵌套<code>if</code>语句</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> condition1:</span><br><span class="line">  <span class="keyword">if</span> condition2:</span><br><span class="line">    <span class="comment"># 如果 condition1 和 condition2 都为 True 执行此代码块</span></span><br><span class="line">  <span class="keyword">else</span>:</span><br><span class="line">    <span class="comment"># 如果 condition1 为 True 并且 condition2 为 False 执行此代码块</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">  <span class="comment"># 如果 condition1 为 False 执行此代码块</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>三元运算符<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/icon-5.gif"
                      width="20" height="20"
                ><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">value_if_true <span class="keyword">if</span> condition <span class="keyword">else</span> value_if_false</span><br><span class="line"><span class="comment"># 如果 condition 为 True，则返回 value_if_true，否则返回 value_if_false</span></span><br></pre></td></tr></table></figure></div></li>
</ul>
</li>
<li><p><strong>循环语句</strong></p>
<ul>
<li><code>for</code> 循环</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#`for`用于遍历序列（如列表、元组、字符串）或其他可迭代对象。</span></span><br><span class="line"><span class="keyword">for</span> variable <span class="keyword">in</span> iterable:</span><br><span class="line">  <span class="comment"># 循环体</span></span><br><span class="line"><span class="comment">#------------------------------------------------</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line"><span class="comment"># `range()`函数常用于生成整数序列，以便在`for`循环中使用。</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li><code>while</code> 循环<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/icon-5.gif"
                      width="20" height="20"
                ><ul>
<li><code>while</code>条件为<code>True</code>时重复执行代码块。条件为<code>False</code>时，循环结束。</li>
<li><code>while</code>循环通常用于处理未知次数的循环。 故必须有计数器。</li>
</ul>
</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> condition:</span><br><span class="line">  <span class="comment"># 循环体</span></span><br><span class="line"><span class="comment">#------------------------------------------------</span></span><br><span class="line">count = <span class="number">0</span> <span class="comment"># 初始化计数器</span></span><br><span class="line"><span class="keyword">while</span> count &lt; <span class="number">5</span>: <span class="comment"># 循环条件</span></span><br><span class="line">  <span class="built_in">print</span>(count)</span><br><span class="line">  count += <span class="number">1</span> <span class="comment"># 更新计数器</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li><code>break</code> 语句<ul>
<li><code>break</code>语句用于中断循环。</li>
</ul>
</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">  <span class="keyword">if</span> i == <span class="number">5</span>:</span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line">  <span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure></div>

<ul>
<li><code>continue</code> 语句<ul>
<li><code>continue</code>语句用于跳过当前循环的剩余语句，并继续下一次循环。</li>
</ul>
</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">  <span class="keyword">if</span> i == <span class="number">5</span>:</span><br><span class="line">    <span class="keyword">continue</span></span><br><span class="line">  <span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure></div>

<ul>
<li><code>pass</code> 语句<ul>
<li><code>pass</code>语句用于占位符，表示一个空语句，通常用于在需要语句但暂时没有实际代码的情况。</li>
</ul>
</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">  <span class="keyword">if</span> i == <span class="number">5</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line">  <span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure></div>

<ul>
<li><code>else</code>子句<ul>
<li><code>else</code>子句用于在正常循环结束后执行一些代码。</li>
</ul>
</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> variable <span class="keyword">in</span> sequence:</span><br><span class="line">  <span class="comment"># 执行的代码块</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">  <span class="comment"># 执行的代码块（仅当未使用 break 时执行）</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> condition:</span><br><span class="line">  <span class="comment"># 执行的代码块</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">  <span class="comment"># 执行的代码块（仅当未使用 break 时执行）</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>循环中的<code>else</code>子句</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, <span class="number">10</span>):</span><br><span class="line">  <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, n):</span><br><span class="line">      <span class="keyword">if</span> n % x == <span class="number">0</span>:      <span class="comment"># 如果 n 可以整除 x，则 n 不是质数</span></span><br><span class="line">          <span class="built_in">print</span>(n, <span class="string">&#x27;equals&#x27;</span>, x, <span class="string">&#x27;*&#x27;</span>, n//x)</span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">  <span class="keyword">else</span>:                   <span class="comment"># 仅当未brreak时执行、即 n 为质数</span></span><br><span class="line">      <span class="built_in">print</span>(n, <span class="string">&#x27;is a prime number&#x27;</span>)</span><br></pre></td></tr></table></figure></div>

<ul>
<li>循环嵌套<ul>
<li>外层循环单次执行内部循环全部执行。</li>
</ul>
</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">4</span>):          <span class="comment"># 外层循环，从1到3</span></span><br><span class="line">  <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">3</span>):      <span class="comment"># 内层循环，从1到2</span></span><br><span class="line">      <span class="built_in">print</span>(<span class="string">f&quot;i=<span class="subst">&#123;i&#125;</span>, j=<span class="subst">&#123;j&#125;</span>&quot;</span>)</span><br><span class="line"><span class="comment">#------------------------------------------------</span></span><br><span class="line">i = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> i &lt;= <span class="number">3</span>:               <span class="comment"># 外层 while 循环</span></span><br><span class="line">  j = <span class="number">1</span></span><br><span class="line">  <span class="keyword">while</span> j &lt;= <span class="number">2</span>:           <span class="comment"># 内层 while 循环</span></span><br><span class="line">      <span class="built_in">print</span>(<span class="string">f&quot;i=<span class="subst">&#123;i&#125;</span>, j=<span class="subst">&#123;j&#125;</span>&quot;</span>)</span><br><span class="line">      j += <span class="number">1</span></span><br><span class="line">  i += <span class="number">1</span></span><br></pre></td></tr></table></figure></div></li>
</ul>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>Programming-Language</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>/1970/01/01/Theory/Algorithm/Stack&amp;queue/</url>
    <content><![CDATA[<h1 id="栈与队列"><a href="#栈与队列" class="headerlink" title="栈与队列"></a>栈与队列</h1>]]></content>
  </entry>
  <entry>
    <title>python &amp; import</title>
    <url>/2024/09/11/Programming-Language/Python%E5%85%A5%E9%97%A8/import%E6%B5%85%E6%9E%90/</url>
    <content><![CDATA[<p>在主程序中导入位于不同目录的模块或包。根据模块或包的所在位置及具体需求，可以采用不同的方法来导入这些模块或包。</p>
<h3 id="1-模块在主程序的子目录中"><a href="#1-模块在主程序的子目录中" class="headerlink" title="1. 模块在主程序的子目录中"></a>1. <strong>模块在主程序的子目录中</strong></h3><p>假设目录结构如下：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">project/</span><br><span class="line">    main.py</span><br><span class="line">    subdir/</span><br><span class="line">        my_module.py</span><br></pre></td></tr></table></figure></div>

<p><code>main.py</code> 是主程序，<code>my_module.py</code> 是要导入的模块。</p>
<h4 id="导入方法："><a href="#导入方法：" class="headerlink" title="导入方法："></a>导入方法：</h4><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># main.py</span></span><br><span class="line"><span class="keyword">from</span> subdir <span class="keyword">import</span> my_module</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用模块中的内容</span></span><br><span class="line">my_module.some_function()</span><br></pre></td></tr></table></figure></div>

<h3 id="2-模块在主程序的父目录中"><a href="#2-模块在主程序的父目录中" class="headerlink" title="2. 模块在主程序的父目录中"></a>2. <strong>模块在主程序的父目录中</strong></h3><p>假设目录结构如下：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">project/</span><br><span class="line">    subdir/</span><br><span class="line">        main.py</span><br><span class="line">    my_module.py</span><br></pre></td></tr></table></figure></div>

<p>此时，<code>my_module.py</code> 在 <code>main.py</code> 的父目录中。</p>
<h4 id="导入方法：-1"><a href="#导入方法：-1" class="headerlink" title="导入方法："></a>导入方法：</h4><p>要导入父目录中的模块，可以使用 <code>sys.path</code> 或者 <code>..</code> 相对导入。</p>
<h5 id="方法-1：使用-sys-path-临时修改搜索路径"><a href="#方法-1：使用-sys-path-临时修改搜索路径" class="headerlink" title="方法 1：使用 sys.path 临时修改搜索路径"></a>方法 1：使用 <code>sys.path</code> 临时修改搜索路径</h5><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># main.py</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> my_module</span><br><span class="line"></span><br><span class="line">my_module.some_function()</span><br></pre></td></tr></table></figure></div>

<h5 id="方法-2：使用相对导入（仅适用于包内模块）"><a href="#方法-2：使用相对导入（仅适用于包内模块）" class="headerlink" title="方法 2：使用相对导入（仅适用于包内模块）"></a>方法 2：使用相对导入（仅适用于包内模块）</h5><p>如果 <code>main.py</code> 位于包内，可以使用相对导入：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># main.py</span></span><br><span class="line"><span class="keyword">from</span> .. <span class="keyword">import</span> my_module  <span class="comment"># 这需要main.py位于一个包中</span></span><br><span class="line"></span><br><span class="line">my_module.some_function()</span><br></pre></td></tr></table></figure></div>

<h3 id="3-模块在主程序的兄弟目录中"><a href="#3-模块在主程序的兄弟目录中" class="headerlink" title="3. 模块在主程序的兄弟目录中"></a>3. <strong>模块在主程序的兄弟目录中</strong></h3><p>假设目录结构如下：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">project/</span><br><span class="line">    main.py</span><br><span class="line">    sibling_dir/</span><br><span class="line">        my_module.py</span><br></pre></td></tr></table></figure></div>

<p>此时，<code>my_module.py</code> 在与 <code>main.py</code> 平级的 <code>sibling_dir</code> 目录中。</p>
<h4 id="导入方法：-2"><a href="#导入方法：-2" class="headerlink" title="导入方法："></a>导入方法：</h4><p>类似于导入父目录中的模块，可以使用 <code>sys.path</code>。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># main.py</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">sys.path.append(os.path.join(os.path.dirname(os.path.abspath(__file__)), <span class="string">&#x27;sibling_dir&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> my_module</span><br><span class="line"></span><br><span class="line">my_module.some_function()</span><br></pre></td></tr></table></figure></div>

<h3 id="4-模块在任意目录中"><a href="#4-模块在任意目录中" class="headerlink" title="4. 模块在任意目录中"></a>4. <strong>模块在任意目录中</strong></h3><p>如果模块或包位于系统的任意位置，可以通过以下几种方式导入：</p>
<h4 id="方法-1：将路径添加到-sys-path"><a href="#方法-1：将路径添加到-sys-path" class="headerlink" title="方法 1：将路径添加到 sys.path"></a>方法 1：将路径添加到 <code>sys.path</code></h4><p>可以将模块所在的路径添加到 <code>sys.path</code> 中。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># main.py</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">sys.path.append(<span class="string">&#x27;/path/to/directory&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> my_module</span><br><span class="line"></span><br><span class="line">my_module.some_function()</span><br></pre></td></tr></table></figure></div>

<h4 id="方法-2：设置-PYTHONPATH-环境变量"><a href="#方法-2：设置-PYTHONPATH-环境变量" class="headerlink" title="方法 2：设置 PYTHONPATH 环境变量"></a>方法 2：设置 <code>PYTHONPATH</code> 环境变量</h4><p>在运行 Python 程序时，可以通过设置 <code>PYTHONPATH</code> 环境变量来指定额外的搜索路径。</p>
<p>在终端中运行：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> PYTHONPATH=<span class="variable">$PYTHONPATH</span>:/path/to/directory</span><br><span class="line">python main.py</span><br></pre></td></tr></table></figure></div>

<h3 id="5-模块在已安装的包或库中"><a href="#5-模块在已安装的包或库中" class="headerlink" title="5. 模块在已安装的包或库中"></a>5. <strong>模块在已安装的包或库中</strong></h3><p>如果模块或包已经安装到 Python 的标准库路径或通过<code>pip</code>安装，则可以直接导入而不需要任何额外操作。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> some_installed_module</span><br><span class="line"></span><br><span class="line">some_installed_module.some_function()</span><br></pre></td></tr></table></figure></div>

<h3 id="6-使用-importlib-动态导入模块"><a href="#6-使用-importlib-动态导入模块" class="headerlink" title="6. 使用 importlib 动态导入模块"></a>6. <strong>使用 <code>importlib</code> 动态导入模块</strong></h3><p>如果你需要在运行时动态地导入模块，可以使用 <code>importlib</code> 模块。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> importlib</span><br><span class="line"></span><br><span class="line">my_module = importlib.import_module(<span class="string">&#x27;my_module&#x27;</span>)</span><br><span class="line">my_module.some_function()</span><br></pre></td></tr></table></figure></div>

<p>这种方式适用于需要根据条件动态导入模块的情况。</p>
<hr>
<p><code>import</code>语句的几种常见用法：</p>
<h3 id="1-导入整个模块"><a href="#1-导入整个模块" class="headerlink" title="1. 导入整个模块"></a>1. <strong>导入整个模块</strong></h3><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> module_name</span><br></pre></td></tr></table></figure></div>

<ul>
<li>这会导入整个模块的内容，使用时需要通过 <code>module_name.</code> 进行访问。</li>
<li><strong>例子</strong>：<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="built_in">print</span>(math.sqrt(<span class="number">16</span>))  <span class="comment"># 输出：4.0</span></span><br></pre></td></tr></table></figure></div></li>
</ul>
<h3 id="2-导入模块中的特定对象"><a href="#2-导入模块中的特定对象" class="headerlink" title="2. 导入模块中的特定对象"></a>2. <strong>导入模块中的特定对象</strong></h3><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> module_name <span class="keyword">import</span> function_name</span><br></pre></td></tr></table></figure></div>

<ul>
<li>这只导入模块中的特定对象，可以直接使用而不需要模块名前缀。</li>
<li><strong>例子</strong>：<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> sqrt</span><br><span class="line"><span class="built_in">print</span>(sqrt(<span class="number">16</span>))  <span class="comment"># 输出：4.0</span></span><br></pre></td></tr></table></figure></div></li>
</ul>
<h3 id="3-导入模块中的多个对象"><a href="#3-导入模块中的多个对象" class="headerlink" title="3. 导入模块中的多个对象"></a>3. <strong>导入模块中的多个对象</strong></h3><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> module_name <span class="keyword">import</span> function1, function2</span><br></pre></td></tr></table></figure></div>

<ul>
<li>可以一次性导入多个对象，使用时不需要模块名前缀。</li>
<li><strong>例子</strong>：<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> sqrt, <span class="built_in">pow</span></span><br><span class="line"><span class="built_in">print</span>(sqrt(<span class="number">16</span>))  <span class="comment"># 输出：4.0</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">pow</span>(<span class="number">2</span>, <span class="number">3</span>))  <span class="comment"># 输出：8.0</span></span><br></pre></td></tr></table></figure></div></li>
</ul>
<h3 id="4-导入模块中的所有对象"><a href="#4-导入模块中的所有对象" class="headerlink" title="4. 导入模块中的所有对象"></a>4. <strong>导入模块中的所有对象</strong></h3><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> module_name <span class="keyword">import</span> *</span><br></pre></td></tr></table></figure></div>

<ul>
<li>这会导入模块中的所有对象，使用时不需要模块名前缀。</li>
<li><strong>例子</strong>：<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> *</span><br><span class="line"><span class="built_in">print</span>(sqrt(<span class="number">16</span>))  <span class="comment"># 输出：4.0</span></span><br><span class="line"><span class="built_in">print</span>(pi)        <span class="comment"># 输出：3.141592653589793</span></span><br></pre></td></tr></table></figure></div></li>
<li><strong>注意</strong>：这种方式可能会引入命名冲突，不推荐在大型项目中使用。</li>
</ul>
<h3 id="5-为模块或对象设置别名"><a href="#5-为模块或对象设置别名" class="headerlink" title="5. 为模块或对象设置别名"></a>5. <strong>为模块或对象设置别名</strong></h3><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> module_name <span class="keyword">as</span> alias_name</span><br><span class="line"><span class="keyword">from</span> module_name <span class="keyword">import</span> function_name <span class="keyword">as</span> alias_name</span><br></pre></td></tr></table></figure></div>

<ul>
<li><p>通过设置别名，可以简化调用，或者避免命名冲突。</p>
</li>
<li><p><strong>例子</strong>：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="built_in">print</span>(np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]))</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> sqrt <span class="keyword">as</span> s</span><br><span class="line"><span class="built_in">print</span>(s(<span class="number">16</span>))  <span class="comment"># 输出：4.0</span></span><br></pre></td></tr></table></figure></div></li>
</ul>
<h3 id="6-相对导入"><a href="#6-相对导入" class="headerlink" title="6. 相对导入"></a>6. <strong>相对导入</strong></h3><ul>
<li>在包结构中，可以使用相对导入来导入同一个包内的模块。</li>
<li><strong>例子</strong>：<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> sibling_module</span><br><span class="line"><span class="keyword">from</span> ..parent_package <span class="keyword">import</span> parent_module</span><br></pre></td></tr></table></figure></div></li>
<li><code>.</code> 表示当前目录，<code>..</code> 表示上级目录。</li>
</ul>
<h3 id="7-延迟导入"><a href="#7-延迟导入" class="headerlink" title="7. 延迟导入"></a>7. <strong>延迟导入</strong></h3><ul>
<li>你也可以在函数或代码块中使用 <code>import</code>，这被称为延迟导入或局部导入。</li>
<li><strong>例子</strong>：<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">some_function</span>():</span><br><span class="line">    <span class="keyword">import</span> math</span><br><span class="line">    <span class="keyword">return</span> math.sqrt(<span class="number">16</span>)</span><br></pre></td></tr></table></figure></div></li>
</ul>
<h3 id="8-导入包"><a href="#8-导入包" class="headerlink" title="8. 导入包"></a>8. <strong>导入包</strong></h3><ul>
<li>如果模块被组织成了包结构，导入包时实际上是导入包中的 <code>__init__.py</code> 文件。</li>
<li><strong>例子</strong>：<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> my_package</span><br></pre></td></tr></table></figure></div></li>
</ul>
<hr>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>Programming-Language</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>python 进阶数据类型及异常</title>
    <url>/2024/09/11/Programming-Language/Python%E5%85%A5%E9%97%A8/python%E5%9F%BA%E7%A1%80-2/</url>
    <content><![CDATA[<h3 id="1-序列类型"><a href="#1-序列类型" class="headerlink" title="1.序列类型"></a>1.<strong>序列类型</strong></h3><ul>
<li><p>列表：<code>list</code></p>
<ul>
<li>列表是一种有序的集合，可以随时添加和删除其中的元素。</li>
</ul>
</li>
</ul>
<hr>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建一个空列表</span></span><br><span class="line">list_data = []</span><br><span class="line">list_data = <span class="built_in">list</span>()</span><br><span class="line"><span class="comment"># 创建一个列表</span></span><br><span class="line">list_data = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="string">&quot;Python&quot;</span>, [<span class="number">4</span>, <span class="number">5</span>]]</span><br></pre></td></tr></table></figure></div>

<hr>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 访问列表中的元素正负索引</span></span><br><span class="line">element = list_data[<span class="number">0</span>]</span><br><span class="line">last_element = list_data[-<span class="number">1</span>]</span><br></pre></td></tr></table></figure></div>

<hr>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改列表中的元素</span></span><br><span class="line">list_data[<span class="number">0</span>] = <span class="number">100</span></span><br><span class="line"><span class="comment"># 添加元素</span></span><br><span class="line">list_data.append(<span class="string">&quot;New Element&quot;</span>)</span><br><span class="line">list_data.insert(<span class="number">1</span>, <span class="string">&quot;Inserted Element&quot;</span>)</span><br><span class="line">list_data.extend([<span class="number">6</span>, <span class="number">7</span>])</span><br><span class="line"><span class="comment"># 删除列表中的元素</span></span><br><span class="line">list_data.remove(<span class="string">&quot;Python&quot;</span>)</span><br><span class="line">removed_element = list_data.pop()  <span class="comment"># 删除最后一个元素</span></span><br><span class="line">removed_element = list_data.pop(<span class="number">0</span>)  <span class="comment"># 删除第一个元素</span></span><br><span class="line"><span class="keyword">del</span> list_data[<span class="number">2</span>]  <span class="comment"># 删除第三个元素</span></span><br><span class="line"><span class="keyword">del</span> list_data  <span class="comment"># 删除整个列表</span></span><br></pre></td></tr></table></figure></div>

<hr>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">sub_list = list_data[<span class="number">1</span>:<span class="number">3</span>]  <span class="comment"># 获取从索引1到索引2的元素</span></span><br><span class="line">sub_list = list_data[::<span class="number">2</span>]  <span class="comment"># 每隔一个元素取一个</span></span><br><span class="line">sub_list = list_data[::-<span class="number">1</span>]  <span class="comment"># 反转列表</span></span><br></pre></td></tr></table></figure></div>

<hr>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">list_data.sort() <span class="comment">#就地排序</span></span><br><span class="line">list_data.sort(reverse=<span class="literal">True</span>)  <span class="comment"># 降序排序</span></span><br><span class="line">sorted_list = <span class="built_in">sorted</span>(list_data) <span class="comment"># 返回排序后的新列表，不改变原列表。</span></span><br></pre></td></tr></table></figure></div>

<hr>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">length = <span class="built_in">len</span>(list_data) <span class="comment"># 获取列表长度</span></span><br><span class="line">exists = <span class="string">&quot;Python&quot;</span> <span class="keyword">in</span> list_data <span class="comment"># 判断元素是否存在</span></span><br><span class="line">count = list_data.count(<span class="string">&quot;Python&quot;</span>) <span class="comment"># 获取元素出现的次数</span></span><br><span class="line">index = list_data.index(<span class="string">&quot;Python&quot;</span>) <span class="comment"># 获取元素在列表中的索引</span></span><br></pre></td></tr></table></figure></div>

<hr>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 遍历列表</span></span><br><span class="line"><span class="keyword">for</span> element <span class="keyword">in</span> list_data:</span><br><span class="line">    <span class="built_in">print</span>(element)</span><br><span class="line"><span class="comment">#---------------------------------------</span></span><br><span class="line"><span class="comment"># 遍历列表索引和元素</span></span><br><span class="line"><span class="keyword">for</span> index, element <span class="keyword">in</span> <span class="built_in">enumerate</span>(list_data):</span><br><span class="line">    <span class="built_in">print</span>(index, element)</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<hr>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 转换列表为字符串</span></span><br><span class="line">str_list = <span class="string">&quot;, &quot;</span>.join([<span class="string">&quot;Python&quot;</span>, <span class="string">&quot;is&quot;</span>, <span class="string">&quot;fun&quot;</span>])</span><br><span class="line"><span class="comment"># 转换为集合</span></span><br><span class="line">unique_elements = <span class="built_in">set</span>(list_data)</span><br><span class="line"><span class="comment"># 转换为元组</span></span><br><span class="line">tuple_list = <span class="built_in">tuple</span>(list_data)</span><br></pre></td></tr></table></figure></div>

<hr>
<ul>
<li>元组：<code>tuple</code><ul>
<li>用于存储有序的元素集合不可变序列</li>
</ul>
</li>
</ul>
<hr>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建一个空元组</span></span><br><span class="line">empty_tuple = ()</span><br><span class="line">empty_tuple = <span class="built_in">tuple</span>()</span><br><span class="line"><span class="comment"># ----------------------------------------</span></span><br><span class="line">typle_data = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="string">&quot;Python&quot;</span>)</span><br><span class="line">single_element_tuple = (<span class="number">1</span>,)   <span class="comment">#单元素元组：必须在元素后添加一个逗号。</span></span><br><span class="line">nested_tuple = (<span class="number">1</span>, (<span class="number">2</span>, <span class="number">3</span>), (<span class="number">4</span>, (<span class="number">5</span>, <span class="number">6</span>)))</span><br></pre></td></tr></table></figure></div>

<hr>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 通过正负索引访问元组</span></span><br><span class="line">element = typle_data[<span class="number">0</span>]  <span class="comment"># 访问第一个元素</span></span><br><span class="line">last_element = typle_data[-<span class="number">1</span>]  <span class="comment"># 访问最后一个元素</span></span><br></pre></td></tr></table></figure></div>

<hr>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">typle_data[<span class="number">0</span>] = <span class="number">10</span>  <span class="comment"># 会报错，元组中的元素无法修改</span></span><br></pre></td></tr></table></figure></div>

<hr>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">sub_tuple = typle_data[<span class="number">1</span>:<span class="number">3</span>]  <span class="comment"># 获取从索引1到索引2的元素</span></span><br><span class="line">sub_tuple = typle_data[::<span class="number">2</span>]  <span class="comment"># 每隔一个元素取一个</span></span><br><span class="line">sub_tuple = typle_data[::-<span class="number">1</span>]  <span class="comment"># 反转元组</span></span><br></pre></td></tr></table></figure></div>

<hr>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">length = <span class="built_in">len</span>(typle_data)          <span class="comment"># 获取元组的长度</span></span><br><span class="line">exists = <span class="string">&quot;Python&quot;</span> <span class="keyword">in</span> typle_data   <span class="comment"># 判断某个元素是否存在于元组中</span></span><br><span class="line">count = typle_data.count(<span class="number">1</span>)       <span class="comment"># 获取某个元素的个数</span></span><br><span class="line">index = typle_data.index(<span class="string">&quot;Python&quot;</span>)    <span class="comment"># 获取某个元素的索引</span></span><br></pre></td></tr></table></figure></div>

<hr>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 遍历元组</span></span><br><span class="line"><span class="keyword">for</span> element <span class="keyword">in</span> typle_data:</span><br><span class="line">    <span class="built_in">print</span>(element)</span><br><span class="line"><span class="comment"># ------------------------------------------</span></span><br><span class="line"><span class="comment"># 获取索引和元素</span></span><br><span class="line"><span class="keyword">for</span> index, element <span class="keyword">in</span> <span class="built_in">enumerate</span>(typle_data):</span><br><span class="line">    <span class="built_in">print</span>(index, element)</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<hr>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 元组解包</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_coordinates</span>():</span><br><span class="line">    <span class="keyword">return</span> (<span class="number">10</span>, <span class="number">20</span>)</span><br><span class="line">x, y = get_coordinates()  <span class="comment"># x = 10, y = 20</span></span><br></pre></td></tr></table></figure></div>

<hr>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 元组解包</span></span><br><span class="line">typle_data = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">a, b, c = typle_data  <span class="comment"># a=1, b=2, c=3</span></span><br><span class="line">typle_data = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>)</span><br><span class="line">a, *b, c = typle_data  <span class="comment"># a=1, b=[2, 3, 4], c=5</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<hr>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 元组转列表</span></span><br><span class="line">list_data = <span class="built_in">list</span>(typle_data)</span><br><span class="line"><span class="comment"># 转换为字符串</span></span><br><span class="line">str_tuple = <span class="string">&quot;, &quot;</span>.join((<span class="string">&quot;Python&quot;</span>, <span class="string">&quot;is&quot;</span>, <span class="string">&quot;fun&quot;</span>))</span><br></pre></td></tr></table></figure></div>

<hr>
<h3 id="2-集合类型"><a href="#2-集合类型" class="headerlink" title="2.集合类型"></a>2.<strong>集合类型</strong></h3><ul>
<li>集合：<code>set</code><ul>
<li>集合<code>Set</code>是一种无序且不重复的元素集合，主要用于成员关系测试、去重以及集合运算。</li>
</ul>
</li>
</ul>
<hr>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">empty_set = <span class="built_in">set</span>()</span><br><span class="line">my_set = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="string">&quot;Python&quot;</span>&#125;</span><br><span class="line">my_set = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>&#125;  <span class="comment"># 结果为 &#123;1, 2, 3&#125;</span></span><br></pre></td></tr></table></figure></div>

<hr>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 添加元素</span></span><br><span class="line">my_set.add(<span class="number">4</span>)</span><br><span class="line">my_set.update([<span class="number">5</span>, <span class="number">6</span>])</span><br><span class="line">my_set.update(&#123;<span class="number">7</span>, <span class="number">8</span>&#125;)</span><br><span class="line"><span class="comment"># 删除元素</span></span><br><span class="line">my_set.remove(<span class="number">3</span>)</span><br><span class="line">my_set.discard(<span class="number">10</span>)  <span class="comment"># 不会报错，即使 10 不在集合中</span></span><br><span class="line">removed_element = my_set.pop()</span><br><span class="line"><span class="comment"># 清空集合</span></span><br><span class="line">my_set.clear()</span><br></pre></td></tr></table></figure></div>

<hr>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">set1 = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line">set2 = &#123;<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;</span><br><span class="line"><span class="comment"># 并集</span></span><br><span class="line">union_set = set1 | set2  <span class="comment"># 结果为 &#123;1, 2, 3, 4, 5&#125;</span></span><br><span class="line">union_set = set1.union(set2)</span><br><span class="line"><span class="comment"># 交集</span></span><br><span class="line">intersection_set = set1 &amp; set2  <span class="comment"># 结果为 &#123;3&#125;</span></span><br><span class="line">intersection_set = set1.intersection(set2)</span><br><span class="line"><span class="comment"># 差集</span></span><br><span class="line">difference_set = set1 - set2  <span class="comment"># 结果为 &#123;1, 2&#125;</span></span><br><span class="line">difference_set = set1.difference(set2)</span><br><span class="line"><span class="comment"># 对称差集返回两个集合中不重复的元素。</span></span><br><span class="line">symmetric_difference_set = set1 ^ set2  <span class="comment"># 结果为 &#123;1, 2, 4, 5&#125;</span></span><br><span class="line">symmetric_difference_set = set1.symmetric_difference(set2)</span><br></pre></td></tr></table></figure></div>

<hr>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 检查元素在集合中是否存在</span></span><br><span class="line">exists = <span class="number">3</span> <span class="keyword">in</span> set1  <span class="comment"># True</span></span><br><span class="line"><span class="comment"># 集合的长度</span></span><br><span class="line">length = <span class="built_in">len</span>(set1)</span><br><span class="line"><span class="comment"># 判断集合是否为子集</span></span><br><span class="line">is_subset = set1.issubset(set2)</span><br><span class="line"><span class="comment"># 判断集合是否为超集</span></span><br><span class="line">is_superset = set1.issuperset(set2)</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<hr>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># for 循环遍历集合</span></span><br><span class="line"><span class="keyword">for</span> element <span class="keyword">in</span> my_set:</span><br><span class="line">    <span class="built_in">print</span>(element)</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<hr>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 集合推导式</span></span><br><span class="line">squared_set = &#123;x**<span class="number">2</span> <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>)&#125;  <span class="comment"># 结果为 &#123;0, 1, 4, 9, 16&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<hr>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 集合转换为列表、元组、字符串</span></span><br><span class="line">my_list = <span class="built_in">list</span>(my_set)</span><br><span class="line">my_tuple = <span class="built_in">tuple</span>(my_set)</span><br><span class="line">my_string = <span class="string">&quot;, &quot;</span>.join(my_set)</span><br></pre></td></tr></table></figure></div>

<hr>
<ul>
<li>冻结集合：<code>frozenset</code><ul>
<li>不可变集合：使用<code>frozenset()</code>创建不可变集合，元素一旦确定不可修改。</li>
</ul>
</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">frozen = <span class="built_in">frozenset</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br></pre></td></tr></table></figure></div>

<hr>
<h3 id="3-映射类型"><a href="#3-映射类型" class="headerlink" title="3.映射类型"></a>3.<strong>映射类型</strong></h3><ul>
<li><p>字典：<code>dict</code></p>
<ul>
<li>字典（Dictionary）是一种用于存储键值对的数据结构。字典是无序的（在 Python 3.7+ 中，字典的插入顺序得到了保证），键必须是唯一的且不可变的。</li>
</ul>
</li>
</ul>
<hr>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建空字典</span></span><br><span class="line">empty_dict = &#123;&#125;</span><br><span class="line">empty_dict = <span class="built_in">dict</span>()</span><br><span class="line"><span class="comment"># 创建字典键值对之间用逗号分隔，键和值之间用冒号分隔。</span></span><br><span class="line">my_dict = &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;Alice&quot;</span>, <span class="string">&quot;age&quot;</span>: <span class="number">25</span>, <span class="string">&quot;city&quot;</span>: <span class="string">&quot;New York&quot;</span>&#125;</span><br><span class="line"><span class="comment"># 使用dict()函数创建字典</span></span><br><span class="line">my_dict = <span class="built_in">dict</span>(name=<span class="string">&quot;Alice&quot;</span>, age=<span class="number">25</span>, city=<span class="string">&quot;New York&quot;</span>)</span><br></pre></td></tr></table></figure></div>

<hr>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 通过键获取字典的值</span></span><br><span class="line">name = my_dict[<span class="string">&quot;name&quot;</span>]  <span class="comment"># 获取键为 &quot;name&quot; 的值</span></span><br><span class="line"><span class="comment"># get()方法。如果键不存在，返回 None</span></span><br><span class="line">age = my_dict.get(<span class="string">&quot;age&quot;</span>)</span><br><span class="line">country = my_dict.get(<span class="string">&quot;country&quot;</span>, <span class="string">&quot;USA&quot;</span>)  <span class="comment"># 如果键不存在，返回 &quot;USA&quot;</span></span><br></pre></td></tr></table></figure></div>

<hr>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 添加或更新键值对：通过赋值操作添加新键值对或更新已有键的值。</span></span><br><span class="line">my_dict[<span class="string">&quot;email&quot;</span>] = <span class="string">&quot;alice@example.com&quot;</span>  <span class="comment"># 添加新键值对</span></span><br><span class="line">my_dict[<span class="string">&quot;age&quot;</span>] = <span class="number">26</span>  <span class="comment"># 更新已有键的值</span></span><br><span class="line"><span class="comment"># 删除字典元素</span></span><br><span class="line"><span class="keyword">del</span> my_dict[<span class="string">&quot;age&quot;</span>]  <span class="comment"># 删除键为 &quot;age&quot; 的键值对</span></span><br><span class="line"><span class="keyword">del</span> my_dict  <span class="comment"># 删除整个字典</span></span><br><span class="line"><span class="comment"># 弹出字典中的指定键对应的值</span></span><br><span class="line">age = my_dict.pop(<span class="string">&quot;age&quot;</span>)</span><br><span class="line"><span class="comment"># 删除并弹出字典中的最后一个元素</span></span><br><span class="line">key, value = my_dict.popitem()</span><br><span class="line"><span class="comment"># 清空字典</span></span><br><span class="line">my_dict.clear()</span><br></pre></td></tr></table></figure></div>

<hr>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 字典长度</span></span><br><span class="line">length = <span class="built_in">len</span>(my_dict)</span><br><span class="line"><span class="comment"># 判断键是否存在</span></span><br><span class="line">exists = <span class="string">&quot;name&quot;</span> <span class="keyword">in</span> my_dict  <span class="comment"># True</span></span><br><span class="line"><span class="comment"># 获取所有键</span></span><br><span class="line">keys = my_dict.keys()</span><br><span class="line"><span class="comment"># 获取所有值</span></span><br><span class="line">values = my_dict.values()</span><br><span class="line"><span class="comment"># 获取所有键值对</span></span><br><span class="line">items = my_dict.items()</span><br></pre></td></tr></table></figure></div>

<hr>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 遍历字典</span></span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> my_dict:</span><br><span class="line">    <span class="built_in">print</span>(key)</span><br><span class="line"><span class="comment"># 遍历键值对</span></span><br><span class="line"><span class="keyword">for</span> key, value <span class="keyword">in</span> my_dict.items():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Key: <span class="subst">&#123;key&#125;</span>, Value: <span class="subst">&#123;value&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure></div>

<hr>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 更新字典</span></span><br><span class="line">my_dict.update(&#123;<span class="string">&quot;age&quot;</span>: <span class="number">26</span>, <span class="string">&quot;country&quot;</span>: <span class="string">&quot;USA&quot;</span>&#125;)</span><br></pre></td></tr></table></figure></div>

<hr>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 字典推导式</span></span><br><span class="line">squares = &#123;x: x**<span class="number">2</span> <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>)&#125;  <span class="comment"># 生成 &#123;0: 0, 1: 1, 2: 4, 3: 9, 4: 16&#125;</span></span><br><span class="line">even_squares = &#123;x: x**<span class="number">2</span> <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>) <span class="keyword">if</span> x % <span class="number">2</span> == <span class="number">0</span>&#125;  <span class="comment"># 生成偶数的平方字典</span></span><br></pre></td></tr></table></figure></div>

<hr>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 字典与其他数据结构的转换</span></span><br><span class="line">keys_list = <span class="built_in">list</span>(my_dict.keys())</span><br><span class="line">values_list = <span class="built_in">list</span>(my_dict.values())</span><br><span class="line">items_list = <span class="built_in">list</span>(my_dict.items())</span><br><span class="line"></span><br><span class="line">keys_set = <span class="built_in">set</span>(my_dict.keys())</span><br><span class="line">values_set = <span class="built_in">set</span>(my_dict.values())</span><br></pre></td></tr></table></figure></div>

<hr>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 嵌套字典</span></span><br><span class="line">nested_dict = &#123;</span><br><span class="line">    <span class="string">&quot;person1&quot;</span>: &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;Alice&quot;</span>, <span class="string">&quot;age&quot;</span>: <span class="number">25</span>&#125;,</span><br><span class="line">    <span class="string">&quot;person2&quot;</span>: &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;Bob&quot;</span>, <span class="string">&quot;age&quot;</span>: <span class="number">30</span>&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 访问嵌套字典中的值</span></span><br><span class="line">age_of_person1 = nested_dict[<span class="string">&quot;person1&quot;</span>][<span class="string">&quot;age&quot;</span>]</span><br></pre></td></tr></table></figure></div>

<hr>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 字典浅拷贝</span></span><br><span class="line">new_dict = my_dict.copy()</span><br><span class="line">new_dict = <span class="built_in">dict</span>(my_dict)</span><br></pre></td></tr></table></figure></div>

<hr>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 字典深拷贝</span></span><br><span class="line"><span class="keyword">import</span> copy</span><br><span class="line">deep_copy_dict = copy.deepcopy(nested_dict)</span><br></pre></td></tr></table></figure></div>

<hr>
<h3 id="4-异常处理"><a href="#4-异常处理" class="headerlink" title="4.异常处理"></a>4.<strong>异常处理</strong></h3><ul>
<li>异常的捕获与处理</li>
<li>常见异常类型</li>
<li>自定义异常</li>
<li>清理操作</li>
</ul>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>Programming-Language</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>函数和类</title>
    <url>/2024/09/11/Programming-Language/Python%E5%85%A5%E9%97%A8/python%E5%9F%BA%E7%A1%80-3/</url>
    <content><![CDATA[<h3 id="1-函数"><a href="#1-函数" class="headerlink" title="1. 函数"></a>1. <strong>函数</strong></h3><ul>
<li><strong>函数的定义</strong></li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">function_name</span>(<span class="params">parameters</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;docstring&quot;&quot;&quot;</span> <span class="comment"># 函数文档字符串 使用help(function_name)或function_name.__doc__查看文档字符串</span></span><br><span class="line">    statements <span class="comment"># 函数体</span></span><br><span class="line">    <span class="keyword">return</span> expression <span class="comment"># 返回值可选 可返回多值</span></span><br><span class="line"></span><br><span class="line">function_name(arguments) <span class="comment"># 调用函数</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li><strong>函数的参数</strong><ul>
<li>位置实参、关键字实参、默认参数</li>
</ul>
</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">function_name</span>(<span class="params">position_parameters,default_parameters = <span class="string">&quot;value&quot;</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    default_parameters形参指定默认值value</span></span><br><span class="line"><span class="string">    default_parameters放在形参列表最后</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">return</span> expression</span><br><span class="line"></span><br><span class="line">function_name(value1, value2)   <span class="comment"># 按位置传递实参</span></span><br><span class="line">function_name(position_parameters=value1, default_parameters = value2)  <span class="comment"># 按关键字传递实参</span></span><br><span class="line">return_value = function_name(position_parameters=value1)  <span class="comment"># 执行函数体并返回值</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>可选<strong>实参</strong></li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 函数中定义可选参数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">function_name</span>(<span class="params">Optional_parameters=<span class="string">&#x27;&#x27;</span></span>):</span><br><span class="line">    <span class="keyword">if</span> Optional_parameters:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">function_name()</span><br></pre></td></tr></table></figure></div>

<ul>
<li><strong>返回字典</strong></li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">function_name</span>(<span class="params">parameters,parameters2</span>):</span><br><span class="line">    <span class="built_in">dict</span> = &#123;<span class="string">&#x27;key&#x27;</span>:parameters,<span class="string">&#x27;key2&#x27;</span>parameters2&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">dict</span></span><br><span class="line">function_object = function_name(value,value2)</span><br></pre></td></tr></table></figure></div>

<ul>
<li><strong>结合使用函数和 while 循环</strong></li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">function_name</span>(<span class="params">parameters</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">return</span> expression</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    parameters = <span class="built_in">input</span>(<span class="string">&quot;请输入参数：&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(function_name(parameters))</span><br><span class="line"><span class="comment">#--------------------------------------------------</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">function_name</span>(<span class="params">parameters</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">return</span> expression</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    parameters = <span class="built_in">input</span>(<span class="string">&quot;请输入参数：&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> parameters == <span class="string">&#x27;q&#x27;</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="built_in">print</span>(function_name(parameters))</span><br></pre></td></tr></table></figure></div>

<ul>
<li><strong>传递列表</strong></li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">function_name</span>(<span class="params">list_name</span>):</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> list_name:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">list_name = [<span class="string">&#x27;item1&#x27;</span>,<span class="string">&#x27;item2&#x27;</span>]</span><br><span class="line">function_name(list_name)</span><br></pre></td></tr></table></figure></div>

<ul>
<li><strong>传递任意数量的实参</strong></li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">function_name</span>(<span class="params">*parameters</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">function_name(value1,value2)</span><br></pre></td></tr></table></figure></div>

<ul>
<li><strong>使用任意数量的关键字实参</strong></li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">function_name</span>(<span class="params">**parameters</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">function_name(key1=value1,key2=value2)</span><br></pre></td></tr></table></figure></div>

<h3 id="2-类"><a href="#2-类" class="headerlink" title="2. 类"></a>2. <strong>类</strong></h3>]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>Programming-Language</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>列表</title>
    <url>/2024/09/11/Programming-Language/Python%E5%85%A5%E9%97%A8/python%E5%9F%BA%E7%A1%80-4/</url>
    <content><![CDATA[<ul>
<li><p><strong>列表解析</strong><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/icon-5.gif"
                      width="20" height="20"
                ></p>
<ul>
<li>基本语法：</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">[expression <span class="keyword">for</span> item <span class="keyword">in</span> iterable]</span><br><span class="line"><span class="comment"># expression：表达式，定义了要放入列表的元素，对 item 的操作。</span></span><br><span class="line"><span class="comment"># 从iterable中取出的元素。</span></span><br><span class="line"><span class="comment"># iterable：可迭代对象，如列表、元组、字符串等。</span></span><br><span class="line">squares = [x**<span class="number">2</span> <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>)]</span><br><span class="line"><span class="comment"># [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>条件过滤列表解析</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">[expression <span class="keyword">for</span> item <span class="keyword">in</span> iterable <span class="keyword">if</span> condition]</span><br><span class="line"><span class="comment"># 如果condition为真，则将表达式的值放入列表中。</span></span><br><span class="line">even_squares = [x**<span class="number">2</span> <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>) <span class="keyword">if</span> x % <span class="number">2</span> == <span class="number">0</span>]</span><br><span class="line"><span class="comment"># [0, 4, 16, 36, 64]</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>嵌套循环列表解析</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">[expression <span class="keyword">for</span> item1 <span class="keyword">in</span> iterable1 <span class="keyword">for</span> item2 <span class="keyword">in</span> iterable2]</span><br><span class="line"><span class="comment"># 将iterable1中的每个元素与iterable2中的每个元素进行组合，生成一个新的列表。</span></span><br><span class="line">pairs = [(x, y) <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>) <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>)]</span><br><span class="line"><span class="comment"># [(0, 0), (0, 1), (0, 2), (1, 0), (1, 1), (1, 2), (2, 0), (2, 1), (2, 2)]</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>带条件过滤的循环嵌套</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">[expression <span class="keyword">for</span> item1 <span class="keyword">in</span> iterable1 <span class="keyword">if</span> condition1 <span class="keyword">for</span> item2 <span class="keyword">in</span> iterable2 <span class="keyword">if</span> condition2]</span><br><span class="line">filtered_pairs = [(x, y) <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>) <span class="keyword">if</span> x != <span class="number">0</span> <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>) <span class="keyword">if</span> y != <span class="number">1</span>]</span><br><span class="line"><span class="comment"># [(1, 0), (1, 2), (2, 0), (2, 2)]</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>列表解析中的函数调用</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">square</span>(<span class="params">x</span>):</span><br><span class="line">  <span class="keyword">return</span> x**<span class="number">2</span></span><br><span class="line">squares = [square(x) <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>)]</span><br><span class="line"><span class="built_in">print</span>(squares)</span><br></pre></td></tr></table></figure></div>

<ul>
<li>列表解析的嵌套结构</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">matrix = [[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>], [<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]]</span><br><span class="line">flat_list = [num <span class="keyword">for</span> row <span class="keyword">in</span> matrix <span class="keyword">for</span> num <span class="keyword">in</span> row]</span><br><span class="line"><span class="built_in">print</span>(flat_list)</span><br><span class="line"><span class="comment"># [1, 2, 3, 4, 5, 6, 7, 8, 9]</span></span><br></pre></td></tr></table></figure></div>
</li>
<li><p><strong>生成器表达式</strong></p>
<ul>
<li>生成器表达式用于创建生成器对象，而不是列表。生成器对象在需要时按需生成元素，从而节省内存。</li>
<li>生成器基本语法</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">(expression <span class="keyword">for</span> item <span class="keyword">in</span> iterable <span class="keyword">if</span> condition)</span><br></pre></td></tr></table></figure></div></li>
</ul>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>Programming-Language</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>python の 工程化</title>
    <url>/2024/09/11/Programming-Language/Python%E5%85%A5%E9%97%A8/python%E6%A0%87%E5%87%86%E5%8C%96/</url>
    <content><![CDATA[
<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="708e61e649e27bfd5da9a83c0751a4ec6d25f398ad1c4e3933429d203968d8d9"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<link href="/css/hbe.style.css" rel="stylesheet" type="text/css"><script data-swup-reload-script type="module" src="/js/plugins/hbe.js"></script>
<script data-swup-reload-script type="module">
import {initHBE} from "/js/plugins/hbe.js";
  console.log("hexo-blog-encrypt: loaded.");
    initHBE();
</script>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>Programming-Language</tag>
        <tag>python</tag>
      </tags>
  </entry>
</search>
